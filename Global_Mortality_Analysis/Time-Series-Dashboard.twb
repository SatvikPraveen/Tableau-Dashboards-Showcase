<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='IHME_GBD_2010_MORTALITY_AGE_SPECIFIC_BY_COUNTRY_1970_2010' inline='true' name='federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='IHME_GBD_2010_MORTALITY_AGE_SPECIFIC_BY_COUNTRY_1970_2010' name='textscan.1txrarz0gz7299154ycph1hbjhrk'>
            <connection class='textscan' directory='/Users/satvikpraveen/Downloads' filename='IHME_GBD_2010_MORTALITY_AGE_SPECIFIC_BY_COUNTRY_1970_2010.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1txrarz0gz7299154ycph1hbjhrk' name='IHME_GBD_2010_MORTALITY_AGE_SPECIFIC_BY_COUNTRY_1970_2010.csv' table='[IHME_GBD_2010_MORTALITY_AGE_SPECIFIC_BY_COUNTRY_1970_2010#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country Code' ordinal='0' />
            <column datatype='string' name='Country Name' ordinal='1' />
            <column datatype='integer' name='Year' ordinal='2' />
            <column datatype='string' name='Age Group' ordinal='3' />
            <column datatype='string' name='Sex' ordinal='4' />
            <column datatype='integer' name='Number of Deaths' ordinal='5' />
            <column datatype='real' name='Death Rate Per 100,000' ordinal='6' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[IHME_GBD_2010_MORTALITY_AGE_SPECIFIC_BY_COUNTRY_1970_2010.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country Code]</local-name>
            <parent-name>[IHME_GBD_2010_MORTALITY_AGE_SPECIFIC_BY_COUNTRY_1970_2010.csv]</parent-name>
            <remote-alias>Country Code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[IHME_GBD_2010_MORTALITY_AGE_SPECIFIC_BY_COUNTRY_1970_2010.csv_A125CDF3715345F792579950A446CA36]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[IHME_GBD_2010_MORTALITY_AGE_SPECIFIC_BY_COUNTRY_1970_2010.csv]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[IHME_GBD_2010_MORTALITY_AGE_SPECIFIC_BY_COUNTRY_1970_2010.csv_A125CDF3715345F792579950A446CA36]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[IHME_GBD_2010_MORTALITY_AGE_SPECIFIC_BY_COUNTRY_1970_2010.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[IHME_GBD_2010_MORTALITY_AGE_SPECIFIC_BY_COUNTRY_1970_2010.csv_A125CDF3715345F792579950A446CA36]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age Group</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Age Group]</local-name>
            <parent-name>[IHME_GBD_2010_MORTALITY_AGE_SPECIFIC_BY_COUNTRY_1970_2010.csv]</parent-name>
            <remote-alias>Age Group</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[IHME_GBD_2010_MORTALITY_AGE_SPECIFIC_BY_COUNTRY_1970_2010.csv_A125CDF3715345F792579950A446CA36]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sex]</local-name>
            <parent-name>[IHME_GBD_2010_MORTALITY_AGE_SPECIFIC_BY_COUNTRY_1970_2010.csv]</parent-name>
            <remote-alias>Sex</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[IHME_GBD_2010_MORTALITY_AGE_SPECIFIC_BY_COUNTRY_1970_2010.csv_A125CDF3715345F792579950A446CA36]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Deaths]</local-name>
            <parent-name>[IHME_GBD_2010_MORTALITY_AGE_SPECIFIC_BY_COUNTRY_1970_2010.csv]</parent-name>
            <remote-alias>Number of Deaths</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[IHME_GBD_2010_MORTALITY_AGE_SPECIFIC_BY_COUNTRY_1970_2010.csv_A125CDF3715345F792579950A446CA36]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Death Rate Per 100,000</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Death Rate Per 100,000]</local-name>
            <parent-name>[IHME_GBD_2010_MORTALITY_AGE_SPECIFIC_BY_COUNTRY_1970_2010.csv]</parent-name>
            <remote-alias>Death Rate Per 100,000</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[IHME_GBD_2010_MORTALITY_AGE_SPECIFIC_BY_COUNTRY_1970_2010.csv_A125CDF3715345F792579950A446CA36]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Age Group]' role='dimension' type='nominal' />
      <column caption='Year Range' datatype='string' name='[Calculation_1918111247723642880]' role='measure' type='nominal'>
        <calculation class='tableau' formula='STR(MIN([Year])) + &quot;-&quot; + STR(MAX([Year]))' />
      </column>
      <column caption='Continent' datatype='string' name='[Calculation_1918111247729491969]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <calculation class='tableau' formula='IF [Country Name] IN (&#10;    &quot;United States&quot;, &quot;Canada&quot;, &quot;Mexico&quot;, &#10;    &quot;Belize&quot;, &quot;Costa Rica&quot;, &quot;El Salvador&quot;, &quot;Guatemala&quot;, &quot;Honduras&quot;, &#10;    &quot;Nicaragua&quot;, &quot;Panama&quot;, &quot;Antigua and Barbuda&quot;, &quot;Bahamas&quot;, &quot;Barbados&quot;, &#10;    &quot;Cuba&quot;, &quot;Dominica&quot;, &quot;Dominican Republic&quot;, &quot;Grenada&quot;, &quot;Haiti&quot;, &#10;    &quot;Jamaica&quot;, &quot;Saint Kitts and Nevis&quot;, &quot;Saint Lucia&quot;, &#10;    &quot;Saint Vincent and the Grenadines&quot;, &quot;Trinidad and Tobago&quot;&#10;) THEN &quot;North America&quot;&#10;ELSEIF [Country Name] IN (&#10;    &quot;Argentina&quot;, &quot;Bolivia&quot;, &quot;Brazil&quot;, &quot;Chile&quot;, &quot;Colombia&quot;, &quot;Ecuador&quot;, &#10;    &quot;Guyana&quot;, &quot;Paraguay&quot;, &quot;Peru&quot;, &quot;Suriname&quot;, &quot;Uruguay&quot;, &quot;Venezuela&quot;&#10;) THEN &quot;South America&quot;&#10;ELSEIF [Country Name] IN (&#10;    &quot;Albania&quot;, &quot;Andorra&quot;, &quot;Armenia&quot;, &quot;Austria&quot;, &quot;Azerbaijan&quot;, &quot;Belarus&quot;, &quot;Belgium&quot;, &#10;    &quot;Bosnia and Herzegovina&quot;, &quot;Bulgaria&quot;, &quot;Croatia&quot;, &quot;Cyprus&quot;, &quot;Czech Republic&quot;, &#10;    &quot;Denmark&quot;, &quot;Estonia&quot;, &quot;Finland&quot;, &quot;France&quot;, &quot;Georgia&quot;, &quot;Germany&quot;, &quot;Greece&quot;, &#10;    &quot;Hungary&quot;, &quot;Iceland&quot;, &quot;Ireland&quot;, &quot;Italy&quot;, &quot;Kosovo&quot;, &quot;Latvia&quot;, &#10;    &quot;Liechtenstein&quot;, &quot;Lithuania&quot;, &quot;Luxembourg&quot;, &quot;Malta&quot;, &quot;Moldova&quot;, &quot;Morroco&quot;, &#10;    &quot;Montenegro&quot;, &quot;Netherlands&quot;, &quot;Macedonia, the Former Yugoslav Republic of&quot;, &quot;Norway&quot;, &quot;Poland&quot;, &#10;    &quot;Portugal&quot;, &quot;Romania&quot;, &quot;Russian Federation&quot;, &quot;San Marino&quot;, &quot;Serbia&quot;, &quot;Slovakia&quot;, &#10;    &quot;Slovenia&quot;, &quot;Spain&quot;, &quot;Sweden&quot;, &quot;Switzerland&quot;, &quot;Turkey&quot;, &quot;Ukraine&quot;, &#10;    &quot;United Kingdom&quot;, &quot;Vatican City&quot;&#10;) THEN &quot;Europe&quot;&#10;ELSEIF [Country Name] IN (&#10;    &quot;Afghanistan&quot;, &quot;Armenia&quot;, &quot;Azerbaijan&quot;, &quot;Bahrain&quot;, &quot;Bangladesh&quot;, &quot;Bhutan&quot;, &#10;    &quot;Brunei Darussalam&quot;, &quot;Cambodia&quot;, &quot;China&quot;, &quot;Cyprus&quot;, &quot;Georgia&quot;, &quot;India&quot;, &quot;Indonesia&quot;, &#10;    &quot;Iran, Islamic Republic of&quot;, &quot;Iraq&quot;, &quot;Israel&quot;, &quot;Japan&quot;, &quot;Jordan&quot;, &quot;Kazakhstan&quot;, &quot;Kuwait&quot;, &#10;    &quot;Kyrgyzstan&quot;, &quot;Lao People&apos;s Democratic Republic&quot;, &quot;Lebanon&quot;, &quot;Malaysia&quot;, &quot;Maldives&quot;, &quot;Mongolia&quot;, &#10;    &quot;Myanmar&quot;, &quot;Nepal&quot;, &quot;North Korea&quot;, &quot;Oman&quot;, &quot;Pakistan&quot;, &quot;Occupied Palestinian Territory&quot;, &#10;    &quot;Philippines&quot;, &quot;Qatar&quot;, &quot;Saudi Arabia&quot;, &quot;Singapore&quot;, &quot;Korea, Democratic People&apos;s Republic of&quot;, &#10;    &quot;Korea, Republic of&quot;,&quot;Sri Lanka&quot;, &quot;Syrian Arab Republic&quot;, &quot;Tajikistan&quot;, &quot;Thailand&quot;, &quot;Timor-Leste&quot;, &quot;Turkey&quot;, &#10;    &quot;Turkmenistan&quot;, &quot;United Arab Emirates&quot;, &quot;Uzbekistan&quot;, &quot;Viet Nam&quot;, &quot;Yemen&quot;&#10;) THEN &quot;Asia&quot;&#10;ELSEIF [Country Name] IN (&#10;    &quot;Australia&quot;, &quot;New Zealand&quot;, &#10;    &quot;Fiji&quot;, &quot;Papua New Guinea&quot;, &quot;Solomon Islands&quot;, &quot;Vanuatu&quot;, &#10;    &quot;Kiribati&quot;, &quot;Marshall Islands&quot;, &quot;Micronesia, Federated States of&quot;, &quot;Nauru&quot;, &quot;Palau&quot;, &#10;    &quot;Samoa&quot;, &quot;Tonga&quot;, &quot;Tuvalu&quot;, &quot;Cook Islands&quot;, &quot;Niue&quot;&#10;) THEN &quot;Australia and Oceania&quot;&#10;ELSEIF [Country Name] IN (&#10;    &quot;Algeria&quot;, &quot;Angola&quot;, &quot;Benin&quot;, &quot;Botswana&quot;, &quot;Burkina Faso&quot;, &quot;Burundi&quot;, &#10;    &quot;Cape Verde&quot;, &quot;Cameroon&quot;, &quot;Central African Republic&quot;, &quot;Chad&quot;, &#10;    &quot;Comoros&quot;, &quot;Congo&quot;, &quot;Congo, the Democratic Republic of the&quot;, &quot;Djibouti&quot;, &quot;Egypt&quot;, &#10;    &quot;Equatorial Guinea&quot;, &quot;Eritrea&quot;, &quot;Eswatini&quot;, &quot;Ethiopia&quot;, &#10;    &quot;Gabon&quot;, &quot;Gambia&quot;, &quot;Ghana&quot;, &quot;Guinea&quot;, &quot;Guinea-Bissau&quot;, &quot;Cote d&apos;Ivoire&quot;, &#10;    &quot;Kenya&quot;, &quot;Lesotho&quot;, &quot;Liberia&quot;, &quot;Libyan Arab Jamahiriya&quot;, &quot;Madagascar&quot;, &quot;Malawi&quot;, &#10;    &quot;Mali&quot;, &quot;Mauritania&quot;, &quot;Mauritius&quot;, &quot;Morocco&quot;, &quot;Mozambique&quot;, &quot;Namibia&quot;, &#10;    &quot;Niger&quot;, &quot;Nigeria&quot;, &quot;Rwanda&quot;, &quot;Sao Tome and Principe&quot;, &quot;Senegal&quot;, &#10;    &quot;Seychelles&quot;, &quot;Sierra Leone&quot;, &quot;Somalia&quot;, &quot;South Africa&quot;, &quot;South Sudan&quot;, &#10;    &quot;Sudan&quot;, &quot;Tanzania, United Republic of&quot;, &quot;Togo&quot;, &quot;Tunisia&quot;, &quot;Uganda&quot;, &quot;Zambia&quot;, &quot;Zimbabwe&quot;&#10;) THEN &quot;Africa&quot;&#10;ELSE &quot;Other&quot;&#10;END' />
      </column>
      <column caption='Dummy' datatype='string' name='[Calculation_1918111248061157380]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;Reset Filter&quot;' />
      </column>
      <column caption='% Change in Deaths' datatype='real' name='[Calculation_1918111248237359109]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='((SUM([Number of Deaths]) - LOOKUP(SUM([Number of Deaths]), -1)) / LOOKUP(SUM([Number of Deaths]), -1))*100'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <semantic-values semantic-role='[Geographical].[Longitude]'>
          <semantic-value key='&quot;Occupied Palestinian Territory&quot;' value='35.233199999999997' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Latitude]'>
          <semantic-value key='&quot;Occupied Palestinian Territory&quot;' value='31.952200000000001' />
        </semantic-values>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Korea, Democratic People&apos;s Republic of&quot;' value='&quot;South Korea&quot;' />
          <semantic-value key='&quot;Korea, Republic of&quot;' value='&quot;North Korea&quot;' />
        </semantic-values>
      </column>
      <column datatype='real' name='[Death Rate Per 100,000]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='integer' name='[Number of Deaths (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='5' formula='[Number of Deaths]' peg='0' size='160896' />
      </column>
      <column datatype='integer' name='[Number of Deaths]' role='measure' type='quantitative' />
      <column datatype='string' name='[Sex]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <column caption='IHME_GBD_2010_MORTALITY_AGE_SPECIFIC_BY_COUNTRY_1970_2010.csv' datatype='table' name='[__tableau_internal_object_id__].[IHME_GBD_2010_MORTALITY_AGE_SPECIFIC_BY_COUNTRY_1970_2010.csv_A125CDF3715345F792579950A446CA36]' role='measure' type='quantitative' />
      <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Death Rate Per 100,000]' derivation='None' name='[none:Death Rate Per 100,000:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Number of Deaths]' derivation='None' name='[none:Number of Deaths:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Deaths]' derivation='Sum' name='[sum:Number of Deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1918111248237359109]' derivation='User' name='[usr:Calculation_1918111248237359109:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Year:qk]' ordering-type='Field' />
      </column-instance>
      <group caption='Action (Age Group,Continent,Death Rate Per 100,000,Sex,Year)' hidden='true' name='[Action (Age Group,Continent,Death Rate Per 100,000,Sex,Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Age Group]' />
          <groupfilter function='level-members' level='[Calculation_1918111247729491969]' />
          <groupfilter function='level-members' level='[none:Death Rate Per 100,000:ok]' />
          <groupfilter function='level-members' level='[Sex]' />
          <groupfilter function='level-members' level='[none:Year:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Age Group,Continent,Number of Deaths,Sex,Year)' hidden='true' name='[Action (Age Group,Continent,Number of Deaths,Sex,Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Age Group]' />
          <groupfilter function='level-members' level='[Calculation_1918111247729491969]' />
          <groupfilter function='level-members' level='[none:Number of Deaths:ok]' />
          <groupfilter function='level-members' level='[Sex]' />
          <groupfilter function='level-members' level='[none:Year:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[usr:Calculation_1918111248237359109:qk:2]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[sum:Number of Deaths:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Korea, Democratic People&apos;s Republic of&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Macedonia, the Former Yugoslav Republic of&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lao People&apos;s Democratic Republic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Korea, Republic of&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tanzania, United Republic of&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Occupied Palestinian Territory&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iran, Islamic Republic of&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Libyan Arab Jamahiriya&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Congo, the Democratic Republic of the&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Micronesia, Federated States of&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Viet Nam&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='IHME_GBD_2010_MORTALITY_AGE_SPECIFIC_BY_COUNTRY_1970_2010.csv' id='IHME_GBD_2010_MORTALITY_AGE_SPECIFIC_BY_COUNTRY_1970_2010.csv_A125CDF3715345F792579950A446CA36'>
            <properties context=''>
              <relation connection='textscan.1txrarz0gz7299154ycph1hbjhrk' name='IHME_GBD_2010_MORTALITY_AGE_SPECIFIC_BY_COUNTRY_1970_2010.csv' table='[IHME_GBD_2010_MORTALITY_AGE_SPECIFIC_BY_COUNTRY_1970_2010#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Country Code' ordinal='0' />
                  <column datatype='string' name='Country Name' ordinal='1' />
                  <column datatype='integer' name='Year' ordinal='2' />
                  <column datatype='string' name='Age Group' ordinal='3' />
                  <column datatype='string' name='Sex' ordinal='4' />
                  <column datatype='integer' name='Number of Deaths' ordinal='5' />
                  <column datatype='real' name='Death Rate Per 100,000' ordinal='6' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter2' name='[Action2_5DA3315436284B4092691A6F7C318878]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Time-Series-Dashboard' type='sheet' worksheet='Reset' />
      <link caption='Filter2' delimiter=',' escape='\' expression='tsl:Time-Series-Dashboard?%5Bfederated.1i3kn7f1gg5h4b17a5kpr1aq8zsp%5D.%5BAge%20Group%5D~s0=&lt;[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[Age Group]~na&gt;&amp;%5Bfederated.1i3kn7f1gg5h4b17a5kpr1aq8zsp%5D.%5BCalculation_1918111247729491969%5D~s0=&lt;[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[Calculation_1918111247729491969]~na&gt;&amp;%5Bfederated.1i3kn7f1gg5h4b17a5kpr1aq8zsp%5D.%5BNumber%20of%20Deaths%5D~s0=&lt;[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[Calculation_1918111248237359109]~na&gt;&amp;%5Bfederated.1i3kn7f1gg5h4b17a5kpr1aq8zsp%5D.%5BSex%5D~s0=&lt;[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[Sex]~na&gt;&amp;%5Bfederated.1i3kn7f1gg5h4b17a5kpr1aq8zsp%5D.%5BYear%5D~s0=&lt;[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[Year]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Reset' />
        <param name='target' value='Time-Series-Dashboard' />
      </command>
    </action>
    <datasources>
      <datasource caption='IHME_GBD_2010_MORTALITY_AGE_SPECIFIC_BY_COUNTRY_1970_2010' name='federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp' />
    </datasources>
    <datasource-dependencies datasource='federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp'>
      <column datatype='string' name='[Age Group]' role='dimension' type='nominal' />
      <column caption='Continent' datatype='string' name='[Calculation_1918111247729491969]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <calculation class='tableau' formula='IF [Country Name] IN (&#10;    &quot;United States&quot;, &quot;Canada&quot;, &quot;Mexico&quot;, &#10;    &quot;Belize&quot;, &quot;Costa Rica&quot;, &quot;El Salvador&quot;, &quot;Guatemala&quot;, &quot;Honduras&quot;, &#10;    &quot;Nicaragua&quot;, &quot;Panama&quot;, &quot;Antigua and Barbuda&quot;, &quot;Bahamas&quot;, &quot;Barbados&quot;, &#10;    &quot;Cuba&quot;, &quot;Dominica&quot;, &quot;Dominican Republic&quot;, &quot;Grenada&quot;, &quot;Haiti&quot;, &#10;    &quot;Jamaica&quot;, &quot;Saint Kitts and Nevis&quot;, &quot;Saint Lucia&quot;, &#10;    &quot;Saint Vincent and the Grenadines&quot;, &quot;Trinidad and Tobago&quot;&#10;) THEN &quot;North America&quot;&#10;ELSEIF [Country Name] IN (&#10;    &quot;Argentina&quot;, &quot;Bolivia&quot;, &quot;Brazil&quot;, &quot;Chile&quot;, &quot;Colombia&quot;, &quot;Ecuador&quot;, &#10;    &quot;Guyana&quot;, &quot;Paraguay&quot;, &quot;Peru&quot;, &quot;Suriname&quot;, &quot;Uruguay&quot;, &quot;Venezuela&quot;&#10;) THEN &quot;South America&quot;&#10;ELSEIF [Country Name] IN (&#10;    &quot;Albania&quot;, &quot;Andorra&quot;, &quot;Armenia&quot;, &quot;Austria&quot;, &quot;Azerbaijan&quot;, &quot;Belarus&quot;, &quot;Belgium&quot;, &#10;    &quot;Bosnia and Herzegovina&quot;, &quot;Bulgaria&quot;, &quot;Croatia&quot;, &quot;Cyprus&quot;, &quot;Czech Republic&quot;, &#10;    &quot;Denmark&quot;, &quot;Estonia&quot;, &quot;Finland&quot;, &quot;France&quot;, &quot;Georgia&quot;, &quot;Germany&quot;, &quot;Greece&quot;, &#10;    &quot;Hungary&quot;, &quot;Iceland&quot;, &quot;Ireland&quot;, &quot;Italy&quot;, &quot;Kosovo&quot;, &quot;Latvia&quot;, &#10;    &quot;Liechtenstein&quot;, &quot;Lithuania&quot;, &quot;Luxembourg&quot;, &quot;Malta&quot;, &quot;Moldova&quot;, &quot;Morroco&quot;, &#10;    &quot;Montenegro&quot;, &quot;Netherlands&quot;, &quot;Macedonia, the Former Yugoslav Republic of&quot;, &quot;Norway&quot;, &quot;Poland&quot;, &#10;    &quot;Portugal&quot;, &quot;Romania&quot;, &quot;Russian Federation&quot;, &quot;San Marino&quot;, &quot;Serbia&quot;, &quot;Slovakia&quot;, &#10;    &quot;Slovenia&quot;, &quot;Spain&quot;, &quot;Sweden&quot;, &quot;Switzerland&quot;, &quot;Turkey&quot;, &quot;Ukraine&quot;, &#10;    &quot;United Kingdom&quot;, &quot;Vatican City&quot;&#10;) THEN &quot;Europe&quot;&#10;ELSEIF [Country Name] IN (&#10;    &quot;Afghanistan&quot;, &quot;Armenia&quot;, &quot;Azerbaijan&quot;, &quot;Bahrain&quot;, &quot;Bangladesh&quot;, &quot;Bhutan&quot;, &#10;    &quot;Brunei Darussalam&quot;, &quot;Cambodia&quot;, &quot;China&quot;, &quot;Cyprus&quot;, &quot;Georgia&quot;, &quot;India&quot;, &quot;Indonesia&quot;, &#10;    &quot;Iran, Islamic Republic of&quot;, &quot;Iraq&quot;, &quot;Israel&quot;, &quot;Japan&quot;, &quot;Jordan&quot;, &quot;Kazakhstan&quot;, &quot;Kuwait&quot;, &#10;    &quot;Kyrgyzstan&quot;, &quot;Lao People&apos;s Democratic Republic&quot;, &quot;Lebanon&quot;, &quot;Malaysia&quot;, &quot;Maldives&quot;, &quot;Mongolia&quot;, &#10;    &quot;Myanmar&quot;, &quot;Nepal&quot;, &quot;North Korea&quot;, &quot;Oman&quot;, &quot;Pakistan&quot;, &quot;Occupied Palestinian Territory&quot;, &#10;    &quot;Philippines&quot;, &quot;Qatar&quot;, &quot;Saudi Arabia&quot;, &quot;Singapore&quot;, &quot;Korea, Democratic People&apos;s Republic of&quot;, &#10;    &quot;Korea, Republic of&quot;,&quot;Sri Lanka&quot;, &quot;Syrian Arab Republic&quot;, &quot;Tajikistan&quot;, &quot;Thailand&quot;, &quot;Timor-Leste&quot;, &quot;Turkey&quot;, &#10;    &quot;Turkmenistan&quot;, &quot;United Arab Emirates&quot;, &quot;Uzbekistan&quot;, &quot;Viet Nam&quot;, &quot;Yemen&quot;&#10;) THEN &quot;Asia&quot;&#10;ELSEIF [Country Name] IN (&#10;    &quot;Australia&quot;, &quot;New Zealand&quot;, &#10;    &quot;Fiji&quot;, &quot;Papua New Guinea&quot;, &quot;Solomon Islands&quot;, &quot;Vanuatu&quot;, &#10;    &quot;Kiribati&quot;, &quot;Marshall Islands&quot;, &quot;Micronesia, Federated States of&quot;, &quot;Nauru&quot;, &quot;Palau&quot;, &#10;    &quot;Samoa&quot;, &quot;Tonga&quot;, &quot;Tuvalu&quot;, &quot;Cook Islands&quot;, &quot;Niue&quot;&#10;) THEN &quot;Australia and Oceania&quot;&#10;ELSEIF [Country Name] IN (&#10;    &quot;Algeria&quot;, &quot;Angola&quot;, &quot;Benin&quot;, &quot;Botswana&quot;, &quot;Burkina Faso&quot;, &quot;Burundi&quot;, &#10;    &quot;Cape Verde&quot;, &quot;Cameroon&quot;, &quot;Central African Republic&quot;, &quot;Chad&quot;, &#10;    &quot;Comoros&quot;, &quot;Congo&quot;, &quot;Congo, the Democratic Republic of the&quot;, &quot;Djibouti&quot;, &quot;Egypt&quot;, &#10;    &quot;Equatorial Guinea&quot;, &quot;Eritrea&quot;, &quot;Eswatini&quot;, &quot;Ethiopia&quot;, &#10;    &quot;Gabon&quot;, &quot;Gambia&quot;, &quot;Ghana&quot;, &quot;Guinea&quot;, &quot;Guinea-Bissau&quot;, &quot;Cote d&apos;Ivoire&quot;, &#10;    &quot;Kenya&quot;, &quot;Lesotho&quot;, &quot;Liberia&quot;, &quot;Libyan Arab Jamahiriya&quot;, &quot;Madagascar&quot;, &quot;Malawi&quot;, &#10;    &quot;Mali&quot;, &quot;Mauritania&quot;, &quot;Mauritius&quot;, &quot;Morocco&quot;, &quot;Mozambique&quot;, &quot;Namibia&quot;, &#10;    &quot;Niger&quot;, &quot;Nigeria&quot;, &quot;Rwanda&quot;, &quot;Sao Tome and Principe&quot;, &quot;Senegal&quot;, &#10;    &quot;Seychelles&quot;, &quot;Sierra Leone&quot;, &quot;Somalia&quot;, &quot;South Africa&quot;, &quot;South Sudan&quot;, &#10;    &quot;Sudan&quot;, &quot;Tanzania, United Republic of&quot;, &quot;Togo&quot;, &quot;Tunisia&quot;, &quot;Uganda&quot;, &quot;Zambia&quot;, &quot;Zimbabwe&quot;&#10;) THEN &quot;Africa&quot;&#10;ELSE &quot;Other&quot;&#10;END' />
      </column>
      <column caption='% Change in Deaths' datatype='real' name='[Calculation_1918111248237359109]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='((SUM([Number of Deaths]) - LOOKUP(SUM([Number of Deaths]), -1)) / LOOKUP(SUM([Number of Deaths]), -1))*100'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Deaths]' role='measure' type='quantitative' />
      <column datatype='string' name='[Sex]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='BarChart-Countries'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Countries: Mortality Rate</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='IHME_GBD_2010_MORTALITY_AGE_SPECIFIC_BY_COUNTRY_1970_2010' name='federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp' />
          </datasources>
          <datasource-dependencies datasource='federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp'>
            <column datatype='string' name='[Age Group]' role='dimension' type='nominal' />
            <column caption='Continent' datatype='string' name='[Calculation_1918111247729491969]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF [Country Name] IN (&#10;    &quot;United States&quot;, &quot;Canada&quot;, &quot;Mexico&quot;, &#10;    &quot;Belize&quot;, &quot;Costa Rica&quot;, &quot;El Salvador&quot;, &quot;Guatemala&quot;, &quot;Honduras&quot;, &#10;    &quot;Nicaragua&quot;, &quot;Panama&quot;, &quot;Antigua and Barbuda&quot;, &quot;Bahamas&quot;, &quot;Barbados&quot;, &#10;    &quot;Cuba&quot;, &quot;Dominica&quot;, &quot;Dominican Republic&quot;, &quot;Grenada&quot;, &quot;Haiti&quot;, &#10;    &quot;Jamaica&quot;, &quot;Saint Kitts and Nevis&quot;, &quot;Saint Lucia&quot;, &#10;    &quot;Saint Vincent and the Grenadines&quot;, &quot;Trinidad and Tobago&quot;&#10;) THEN &quot;North America&quot;&#10;ELSEIF [Country Name] IN (&#10;    &quot;Argentina&quot;, &quot;Bolivia&quot;, &quot;Brazil&quot;, &quot;Chile&quot;, &quot;Colombia&quot;, &quot;Ecuador&quot;, &#10;    &quot;Guyana&quot;, &quot;Paraguay&quot;, &quot;Peru&quot;, &quot;Suriname&quot;, &quot;Uruguay&quot;, &quot;Venezuela&quot;&#10;) THEN &quot;South America&quot;&#10;ELSEIF [Country Name] IN (&#10;    &quot;Albania&quot;, &quot;Andorra&quot;, &quot;Armenia&quot;, &quot;Austria&quot;, &quot;Azerbaijan&quot;, &quot;Belarus&quot;, &quot;Belgium&quot;, &#10;    &quot;Bosnia and Herzegovina&quot;, &quot;Bulgaria&quot;, &quot;Croatia&quot;, &quot;Cyprus&quot;, &quot;Czech Republic&quot;, &#10;    &quot;Denmark&quot;, &quot;Estonia&quot;, &quot;Finland&quot;, &quot;France&quot;, &quot;Georgia&quot;, &quot;Germany&quot;, &quot;Greece&quot;, &#10;    &quot;Hungary&quot;, &quot;Iceland&quot;, &quot;Ireland&quot;, &quot;Italy&quot;, &quot;Kosovo&quot;, &quot;Latvia&quot;, &#10;    &quot;Liechtenstein&quot;, &quot;Lithuania&quot;, &quot;Luxembourg&quot;, &quot;Malta&quot;, &quot;Moldova&quot;, &quot;Morroco&quot;, &#10;    &quot;Montenegro&quot;, &quot;Netherlands&quot;, &quot;Macedonia, the Former Yugoslav Republic of&quot;, &quot;Norway&quot;, &quot;Poland&quot;, &#10;    &quot;Portugal&quot;, &quot;Romania&quot;, &quot;Russian Federation&quot;, &quot;San Marino&quot;, &quot;Serbia&quot;, &quot;Slovakia&quot;, &#10;    &quot;Slovenia&quot;, &quot;Spain&quot;, &quot;Sweden&quot;, &quot;Switzerland&quot;, &quot;Turkey&quot;, &quot;Ukraine&quot;, &#10;    &quot;United Kingdom&quot;, &quot;Vatican City&quot;&#10;) THEN &quot;Europe&quot;&#10;ELSEIF [Country Name] IN (&#10;    &quot;Afghanistan&quot;, &quot;Armenia&quot;, &quot;Azerbaijan&quot;, &quot;Bahrain&quot;, &quot;Bangladesh&quot;, &quot;Bhutan&quot;, &#10;    &quot;Brunei Darussalam&quot;, &quot;Cambodia&quot;, &quot;China&quot;, &quot;Cyprus&quot;, &quot;Georgia&quot;, &quot;India&quot;, &quot;Indonesia&quot;, &#10;    &quot;Iran, Islamic Republic of&quot;, &quot;Iraq&quot;, &quot;Israel&quot;, &quot;Japan&quot;, &quot;Jordan&quot;, &quot;Kazakhstan&quot;, &quot;Kuwait&quot;, &#10;    &quot;Kyrgyzstan&quot;, &quot;Lao People&apos;s Democratic Republic&quot;, &quot;Lebanon&quot;, &quot;Malaysia&quot;, &quot;Maldives&quot;, &quot;Mongolia&quot;, &#10;    &quot;Myanmar&quot;, &quot;Nepal&quot;, &quot;North Korea&quot;, &quot;Oman&quot;, &quot;Pakistan&quot;, &quot;Occupied Palestinian Territory&quot;, &#10;    &quot;Philippines&quot;, &quot;Qatar&quot;, &quot;Saudi Arabia&quot;, &quot;Singapore&quot;, &quot;Korea, Democratic People&apos;s Republic of&quot;, &#10;    &quot;Korea, Republic of&quot;,&quot;Sri Lanka&quot;, &quot;Syrian Arab Republic&quot;, &quot;Tajikistan&quot;, &quot;Thailand&quot;, &quot;Timor-Leste&quot;, &quot;Turkey&quot;, &#10;    &quot;Turkmenistan&quot;, &quot;United Arab Emirates&quot;, &quot;Uzbekistan&quot;, &quot;Viet Nam&quot;, &quot;Yemen&quot;&#10;) THEN &quot;Asia&quot;&#10;ELSEIF [Country Name] IN (&#10;    &quot;Australia&quot;, &quot;New Zealand&quot;, &#10;    &quot;Fiji&quot;, &quot;Papua New Guinea&quot;, &quot;Solomon Islands&quot;, &quot;Vanuatu&quot;, &#10;    &quot;Kiribati&quot;, &quot;Marshall Islands&quot;, &quot;Micronesia, Federated States of&quot;, &quot;Nauru&quot;, &quot;Palau&quot;, &#10;    &quot;Samoa&quot;, &quot;Tonga&quot;, &quot;Tuvalu&quot;, &quot;Cook Islands&quot;, &quot;Niue&quot;&#10;) THEN &quot;Australia and Oceania&quot;&#10;ELSEIF [Country Name] IN (&#10;    &quot;Algeria&quot;, &quot;Angola&quot;, &quot;Benin&quot;, &quot;Botswana&quot;, &quot;Burkina Faso&quot;, &quot;Burundi&quot;, &#10;    &quot;Cape Verde&quot;, &quot;Cameroon&quot;, &quot;Central African Republic&quot;, &quot;Chad&quot;, &#10;    &quot;Comoros&quot;, &quot;Congo&quot;, &quot;Congo, the Democratic Republic of the&quot;, &quot;Djibouti&quot;, &quot;Egypt&quot;, &#10;    &quot;Equatorial Guinea&quot;, &quot;Eritrea&quot;, &quot;Eswatini&quot;, &quot;Ethiopia&quot;, &#10;    &quot;Gabon&quot;, &quot;Gambia&quot;, &quot;Ghana&quot;, &quot;Guinea&quot;, &quot;Guinea-Bissau&quot;, &quot;Cote d&apos;Ivoire&quot;, &#10;    &quot;Kenya&quot;, &quot;Lesotho&quot;, &quot;Liberia&quot;, &quot;Libyan Arab Jamahiriya&quot;, &quot;Madagascar&quot;, &quot;Malawi&quot;, &#10;    &quot;Mali&quot;, &quot;Mauritania&quot;, &quot;Mauritius&quot;, &quot;Morocco&quot;, &quot;Mozambique&quot;, &quot;Namibia&quot;, &#10;    &quot;Niger&quot;, &quot;Nigeria&quot;, &quot;Rwanda&quot;, &quot;Sao Tome and Principe&quot;, &quot;Senegal&quot;, &#10;    &quot;Seychelles&quot;, &quot;Sierra Leone&quot;, &quot;Somalia&quot;, &quot;South Africa&quot;, &quot;South Sudan&quot;, &#10;    &quot;Sudan&quot;, &quot;Tanzania, United Republic of&quot;, &quot;Togo&quot;, &quot;Tunisia&quot;, &quot;Uganda&quot;, &quot;Zambia&quot;, &quot;Zimbabwe&quot;&#10;) THEN &quot;Africa&quot;&#10;ELSE &quot;Other&quot;&#10;END' />
            </column>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Occupied Palestinian Territory&quot;' value='35.233199999999997' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Occupied Palestinian Territory&quot;' value='31.952200000000001' />
              </semantic-values>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Korea, Democratic People&apos;s Republic of&quot;' value='&quot;South Korea&quot;' />
                <semantic-value key='&quot;Korea, Republic of&quot;' value='&quot;North Korea&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Death Rate Per 100,000]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sex]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Age Group]' derivation='None' name='[none:Age Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1918111247729491969]' derivation='None' name='[none:Calculation_1918111247729491969:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Death Rate Per 100,000]' derivation='Sum' name='[sum:Death Rate Per 100,000:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Age Group:nk]' filter-group='5'>
            <groupfilter function='member' level='[none:Age Group:nk]' member='&quot;0-6 days&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Calculation_1918111247729491969:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Calculation_1918111247729491969:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Sex:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:Sex:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Year:qk]' filter-group='7' included-values='all' />
          <slices>
            <column>[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Sex:nk]</column>
            <column>[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Year:qk]</column>
            <column>[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Calculation_1918111247729491969:nk]</column>
            <column>[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Age Group:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Country Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[sum:Death Rate Per 100,000:qk]</rows>
        <cols>[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Country Name:nk]</cols>
      </table>
      <simple-id uuid='{1192B109-AA45-45B5-9D5D-65F1612E6F3C}' />
    </worksheet>
    <worksheet name='KPIs-Total_Deaths'>
      <table>
        <view>
          <datasources>
            <datasource caption='IHME_GBD_2010_MORTALITY_AGE_SPECIFIC_BY_COUNTRY_1970_2010' name='federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp' />
          </datasources>
          <datasource-dependencies datasource='federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp'>
            <column datatype='string' name='[Age Group]' role='dimension' type='nominal' />
            <column caption='Continent' datatype='string' name='[Calculation_1918111247729491969]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF [Country Name] IN (&#10;    &quot;United States&quot;, &quot;Canada&quot;, &quot;Mexico&quot;, &#10;    &quot;Belize&quot;, &quot;Costa Rica&quot;, &quot;El Salvador&quot;, &quot;Guatemala&quot;, &quot;Honduras&quot;, &#10;    &quot;Nicaragua&quot;, &quot;Panama&quot;, &quot;Antigua and Barbuda&quot;, &quot;Bahamas&quot;, &quot;Barbados&quot;, &#10;    &quot;Cuba&quot;, &quot;Dominica&quot;, &quot;Dominican Republic&quot;, &quot;Grenada&quot;, &quot;Haiti&quot;, &#10;    &quot;Jamaica&quot;, &quot;Saint Kitts and Nevis&quot;, &quot;Saint Lucia&quot;, &#10;    &quot;Saint Vincent and the Grenadines&quot;, &quot;Trinidad and Tobago&quot;&#10;) THEN &quot;North America&quot;&#10;ELSEIF [Country Name] IN (&#10;    &quot;Argentina&quot;, &quot;Bolivia&quot;, &quot;Brazil&quot;, &quot;Chile&quot;, &quot;Colombia&quot;, &quot;Ecuador&quot;, &#10;    &quot;Guyana&quot;, &quot;Paraguay&quot;, &quot;Peru&quot;, &quot;Suriname&quot;, &quot;Uruguay&quot;, &quot;Venezuela&quot;&#10;) THEN &quot;South America&quot;&#10;ELSEIF [Country Name] IN (&#10;    &quot;Albania&quot;, &quot;Andorra&quot;, &quot;Armenia&quot;, &quot;Austria&quot;, &quot;Azerbaijan&quot;, &quot;Belarus&quot;, &quot;Belgium&quot;, &#10;    &quot;Bosnia and Herzegovina&quot;, &quot;Bulgaria&quot;, &quot;Croatia&quot;, &quot;Cyprus&quot;, &quot;Czech Republic&quot;, &#10;    &quot;Denmark&quot;, &quot;Estonia&quot;, &quot;Finland&quot;, &quot;France&quot;, &quot;Georgia&quot;, &quot;Germany&quot;, &quot;Greece&quot;, &#10;    &quot;Hungary&quot;, &quot;Iceland&quot;, &quot;Ireland&quot;, &quot;Italy&quot;, &quot;Kosovo&quot;, &quot;Latvia&quot;, &#10;    &quot;Liechtenstein&quot;, &quot;Lithuania&quot;, &quot;Luxembourg&quot;, &quot;Malta&quot;, &quot;Moldova&quot;, &quot;Morroco&quot;, &#10;    &quot;Montenegro&quot;, &quot;Netherlands&quot;, &quot;Macedonia, the Former Yugoslav Republic of&quot;, &quot;Norway&quot;, &quot;Poland&quot;, &#10;    &quot;Portugal&quot;, &quot;Romania&quot;, &quot;Russian Federation&quot;, &quot;San Marino&quot;, &quot;Serbia&quot;, &quot;Slovakia&quot;, &#10;    &quot;Slovenia&quot;, &quot;Spain&quot;, &quot;Sweden&quot;, &quot;Switzerland&quot;, &quot;Turkey&quot;, &quot;Ukraine&quot;, &#10;    &quot;United Kingdom&quot;, &quot;Vatican City&quot;&#10;) THEN &quot;Europe&quot;&#10;ELSEIF [Country Name] IN (&#10;    &quot;Afghanistan&quot;, &quot;Armenia&quot;, &quot;Azerbaijan&quot;, &quot;Bahrain&quot;, &quot;Bangladesh&quot;, &quot;Bhutan&quot;, &#10;    &quot;Brunei Darussalam&quot;, &quot;Cambodia&quot;, &quot;China&quot;, &quot;Cyprus&quot;, &quot;Georgia&quot;, &quot;India&quot;, &quot;Indonesia&quot;, &#10;    &quot;Iran, Islamic Republic of&quot;, &quot;Iraq&quot;, &quot;Israel&quot;, &quot;Japan&quot;, &quot;Jordan&quot;, &quot;Kazakhstan&quot;, &quot;Kuwait&quot;, &#10;    &quot;Kyrgyzstan&quot;, &quot;Lao People&apos;s Democratic Republic&quot;, &quot;Lebanon&quot;, &quot;Malaysia&quot;, &quot;Maldives&quot;, &quot;Mongolia&quot;, &#10;    &quot;Myanmar&quot;, &quot;Nepal&quot;, &quot;North Korea&quot;, &quot;Oman&quot;, &quot;Pakistan&quot;, &quot;Occupied Palestinian Territory&quot;, &#10;    &quot;Philippines&quot;, &quot;Qatar&quot;, &quot;Saudi Arabia&quot;, &quot;Singapore&quot;, &quot;Korea, Democratic People&apos;s Republic of&quot;, &#10;    &quot;Korea, Republic of&quot;,&quot;Sri Lanka&quot;, &quot;Syrian Arab Republic&quot;, &quot;Tajikistan&quot;, &quot;Thailand&quot;, &quot;Timor-Leste&quot;, &quot;Turkey&quot;, &#10;    &quot;Turkmenistan&quot;, &quot;United Arab Emirates&quot;, &quot;Uzbekistan&quot;, &quot;Viet Nam&quot;, &quot;Yemen&quot;&#10;) THEN &quot;Asia&quot;&#10;ELSEIF [Country Name] IN (&#10;    &quot;Australia&quot;, &quot;New Zealand&quot;, &#10;    &quot;Fiji&quot;, &quot;Papua New Guinea&quot;, &quot;Solomon Islands&quot;, &quot;Vanuatu&quot;, &#10;    &quot;Kiribati&quot;, &quot;Marshall Islands&quot;, &quot;Micronesia, Federated States of&quot;, &quot;Nauru&quot;, &quot;Palau&quot;, &#10;    &quot;Samoa&quot;, &quot;Tonga&quot;, &quot;Tuvalu&quot;, &quot;Cook Islands&quot;, &quot;Niue&quot;&#10;) THEN &quot;Australia and Oceania&quot;&#10;ELSEIF [Country Name] IN (&#10;    &quot;Algeria&quot;, &quot;Angola&quot;, &quot;Benin&quot;, &quot;Botswana&quot;, &quot;Burkina Faso&quot;, &quot;Burundi&quot;, &#10;    &quot;Cape Verde&quot;, &quot;Cameroon&quot;, &quot;Central African Republic&quot;, &quot;Chad&quot;, &#10;    &quot;Comoros&quot;, &quot;Congo&quot;, &quot;Congo, the Democratic Republic of the&quot;, &quot;Djibouti&quot;, &quot;Egypt&quot;, &#10;    &quot;Equatorial Guinea&quot;, &quot;Eritrea&quot;, &quot;Eswatini&quot;, &quot;Ethiopia&quot;, &#10;    &quot;Gabon&quot;, &quot;Gambia&quot;, &quot;Ghana&quot;, &quot;Guinea&quot;, &quot;Guinea-Bissau&quot;, &quot;Cote d&apos;Ivoire&quot;, &#10;    &quot;Kenya&quot;, &quot;Lesotho&quot;, &quot;Liberia&quot;, &quot;Libyan Arab Jamahiriya&quot;, &quot;Madagascar&quot;, &quot;Malawi&quot;, &#10;    &quot;Mali&quot;, &quot;Mauritania&quot;, &quot;Mauritius&quot;, &quot;Morocco&quot;, &quot;Mozambique&quot;, &quot;Namibia&quot;, &#10;    &quot;Niger&quot;, &quot;Nigeria&quot;, &quot;Rwanda&quot;, &quot;Sao Tome and Principe&quot;, &quot;Senegal&quot;, &#10;    &quot;Seychelles&quot;, &quot;Sierra Leone&quot;, &quot;Somalia&quot;, &quot;South Africa&quot;, &quot;South Sudan&quot;, &#10;    &quot;Sudan&quot;, &quot;Tanzania, United Republic of&quot;, &quot;Togo&quot;, &quot;Tunisia&quot;, &quot;Uganda&quot;, &quot;Zambia&quot;, &quot;Zimbabwe&quot;&#10;) THEN &quot;Africa&quot;&#10;ELSE &quot;Other&quot;&#10;END' />
            </column>
            <column caption='% Change in Deaths' datatype='real' name='[Calculation_1918111248237359109]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='((SUM([Number of Deaths]) - LOOKUP(SUM([Number of Deaths]), -1)) / LOOKUP(SUM([Number of Deaths]), -1))*100'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Occupied Palestinian Territory&quot;' value='35.233199999999997' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Occupied Palestinian Territory&quot;' value='31.952200000000001' />
              </semantic-values>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Korea, Democratic People&apos;s Republic of&quot;' value='&quot;South Korea&quot;' />
                <semantic-value key='&quot;Korea, Republic of&quot;' value='&quot;North Korea&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Number of Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sex]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Age Group]' derivation='None' name='[none:Age Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1918111247729491969]' derivation='None' name='[none:Calculation_1918111247729491969:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Deaths]' derivation='Sum' name='[sum:Number of Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1918111248237359109]' derivation='User' name='[usr:Calculation_1918111248237359109:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_1918111248237359109]' derivation='User' name='[usr:Calculation_1918111248237359109:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[sum:Number of Deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[usr:Calculation_1918111248237359109:qk:3]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[sum:Number of Deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[usr:Calculation_1918111248237359109:qk:1]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Age Group:nk]' filter-group='5'>
            <groupfilter function='member' level='[none:Age Group:nk]' member='&quot;0-6 days&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Calculation_1918111247729491969:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Calculation_1918111247729491969:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Sex:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:Sex:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Year:qk]' filter-group='7' included-values='all' />
          <slices>
            <column>[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Year:qk]</column>
            <column>[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[:Measure Names]</column>
            <column>[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Calculation_1918111247729491969:nk]</column>
            <column>[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Age Group:nk]</column>
            <column>[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Sex:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[:Measure Names]' value='176' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Year:ok]</rows>
        <cols>[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{6DC7B813-3BB0-4A0D-8E6F-B9BD757AE7F9}' />
    </worksheet>
    <worksheet name='Reset'>
      <table>
        <view>
          <datasources>
            <datasource caption='IHME_GBD_2010_MORTALITY_AGE_SPECIFIC_BY_COUNTRY_1970_2010' name='federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp' />
          </datasources>
          <datasource-dependencies datasource='federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp'>
            <column caption='Dummy' datatype='string' name='[Calculation_1918111248061157380]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;Reset Filter&quot;' />
            </column>
            <column-instance column='[Calculation_1918111248061157380]' derivation='None' name='[none:Calculation_1918111248061157380:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Calculation_1918111248061157380:nk]'>
            <groupfilter function='member' level='[none:Calculation_1918111248061157380:nk]' member='&quot;Reset Filter&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Calculation_1918111248061157380:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-weight' data-class='subtotal' scope='rows' value='bold' />
            <format attr='color' data-class='subtotal' scope='rows' value='#000000' />
            <format attr='font-family' data-class='subtotal' scope='rows' value='Toppan Bunkyu Midashi Gothic' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='10' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Calculation_1918111248061157380:nk]' value='true' />
            <format attr='wrap' field='[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Calculation_1918111248061157380:nk]' value='auto' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='on' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Calculation_1918111248061157380:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{414980D3-69DA-4ABA-8946-F92ED70764F4}' />
    </worksheet>
    <worksheet name='Scatter plots'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Countries: Number of Deaths vs. Mortality Rate</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='IHME_GBD_2010_MORTALITY_AGE_SPECIFIC_BY_COUNTRY_1970_2010' name='federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp' />
          </datasources>
          <datasource-dependencies datasource='federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp'>
            <column datatype='string' name='[Age Group]' role='dimension' type='nominal' />
            <column caption='Continent' datatype='string' name='[Calculation_1918111247729491969]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF [Country Name] IN (&#10;    &quot;United States&quot;, &quot;Canada&quot;, &quot;Mexico&quot;, &#10;    &quot;Belize&quot;, &quot;Costa Rica&quot;, &quot;El Salvador&quot;, &quot;Guatemala&quot;, &quot;Honduras&quot;, &#10;    &quot;Nicaragua&quot;, &quot;Panama&quot;, &quot;Antigua and Barbuda&quot;, &quot;Bahamas&quot;, &quot;Barbados&quot;, &#10;    &quot;Cuba&quot;, &quot;Dominica&quot;, &quot;Dominican Republic&quot;, &quot;Grenada&quot;, &quot;Haiti&quot;, &#10;    &quot;Jamaica&quot;, &quot;Saint Kitts and Nevis&quot;, &quot;Saint Lucia&quot;, &#10;    &quot;Saint Vincent and the Grenadines&quot;, &quot;Trinidad and Tobago&quot;&#10;) THEN &quot;North America&quot;&#10;ELSEIF [Country Name] IN (&#10;    &quot;Argentina&quot;, &quot;Bolivia&quot;, &quot;Brazil&quot;, &quot;Chile&quot;, &quot;Colombia&quot;, &quot;Ecuador&quot;, &#10;    &quot;Guyana&quot;, &quot;Paraguay&quot;, &quot;Peru&quot;, &quot;Suriname&quot;, &quot;Uruguay&quot;, &quot;Venezuela&quot;&#10;) THEN &quot;South America&quot;&#10;ELSEIF [Country Name] IN (&#10;    &quot;Albania&quot;, &quot;Andorra&quot;, &quot;Armenia&quot;, &quot;Austria&quot;, &quot;Azerbaijan&quot;, &quot;Belarus&quot;, &quot;Belgium&quot;, &#10;    &quot;Bosnia and Herzegovina&quot;, &quot;Bulgaria&quot;, &quot;Croatia&quot;, &quot;Cyprus&quot;, &quot;Czech Republic&quot;, &#10;    &quot;Denmark&quot;, &quot;Estonia&quot;, &quot;Finland&quot;, &quot;France&quot;, &quot;Georgia&quot;, &quot;Germany&quot;, &quot;Greece&quot;, &#10;    &quot;Hungary&quot;, &quot;Iceland&quot;, &quot;Ireland&quot;, &quot;Italy&quot;, &quot;Kosovo&quot;, &quot;Latvia&quot;, &#10;    &quot;Liechtenstein&quot;, &quot;Lithuania&quot;, &quot;Luxembourg&quot;, &quot;Malta&quot;, &quot;Moldova&quot;, &quot;Morroco&quot;, &#10;    &quot;Montenegro&quot;, &quot;Netherlands&quot;, &quot;Macedonia, the Former Yugoslav Republic of&quot;, &quot;Norway&quot;, &quot;Poland&quot;, &#10;    &quot;Portugal&quot;, &quot;Romania&quot;, &quot;Russian Federation&quot;, &quot;San Marino&quot;, &quot;Serbia&quot;, &quot;Slovakia&quot;, &#10;    &quot;Slovenia&quot;, &quot;Spain&quot;, &quot;Sweden&quot;, &quot;Switzerland&quot;, &quot;Turkey&quot;, &quot;Ukraine&quot;, &#10;    &quot;United Kingdom&quot;, &quot;Vatican City&quot;&#10;) THEN &quot;Europe&quot;&#10;ELSEIF [Country Name] IN (&#10;    &quot;Afghanistan&quot;, &quot;Armenia&quot;, &quot;Azerbaijan&quot;, &quot;Bahrain&quot;, &quot;Bangladesh&quot;, &quot;Bhutan&quot;, &#10;    &quot;Brunei Darussalam&quot;, &quot;Cambodia&quot;, &quot;China&quot;, &quot;Cyprus&quot;, &quot;Georgia&quot;, &quot;India&quot;, &quot;Indonesia&quot;, &#10;    &quot;Iran, Islamic Republic of&quot;, &quot;Iraq&quot;, &quot;Israel&quot;, &quot;Japan&quot;, &quot;Jordan&quot;, &quot;Kazakhstan&quot;, &quot;Kuwait&quot;, &#10;    &quot;Kyrgyzstan&quot;, &quot;Lao People&apos;s Democratic Republic&quot;, &quot;Lebanon&quot;, &quot;Malaysia&quot;, &quot;Maldives&quot;, &quot;Mongolia&quot;, &#10;    &quot;Myanmar&quot;, &quot;Nepal&quot;, &quot;North Korea&quot;, &quot;Oman&quot;, &quot;Pakistan&quot;, &quot;Occupied Palestinian Territory&quot;, &#10;    &quot;Philippines&quot;, &quot;Qatar&quot;, &quot;Saudi Arabia&quot;, &quot;Singapore&quot;, &quot;Korea, Democratic People&apos;s Republic of&quot;, &#10;    &quot;Korea, Republic of&quot;,&quot;Sri Lanka&quot;, &quot;Syrian Arab Republic&quot;, &quot;Tajikistan&quot;, &quot;Thailand&quot;, &quot;Timor-Leste&quot;, &quot;Turkey&quot;, &#10;    &quot;Turkmenistan&quot;, &quot;United Arab Emirates&quot;, &quot;Uzbekistan&quot;, &quot;Viet Nam&quot;, &quot;Yemen&quot;&#10;) THEN &quot;Asia&quot;&#10;ELSEIF [Country Name] IN (&#10;    &quot;Australia&quot;, &quot;New Zealand&quot;, &#10;    &quot;Fiji&quot;, &quot;Papua New Guinea&quot;, &quot;Solomon Islands&quot;, &quot;Vanuatu&quot;, &#10;    &quot;Kiribati&quot;, &quot;Marshall Islands&quot;, &quot;Micronesia, Federated States of&quot;, &quot;Nauru&quot;, &quot;Palau&quot;, &#10;    &quot;Samoa&quot;, &quot;Tonga&quot;, &quot;Tuvalu&quot;, &quot;Cook Islands&quot;, &quot;Niue&quot;&#10;) THEN &quot;Australia and Oceania&quot;&#10;ELSEIF [Country Name] IN (&#10;    &quot;Algeria&quot;, &quot;Angola&quot;, &quot;Benin&quot;, &quot;Botswana&quot;, &quot;Burkina Faso&quot;, &quot;Burundi&quot;, &#10;    &quot;Cape Verde&quot;, &quot;Cameroon&quot;, &quot;Central African Republic&quot;, &quot;Chad&quot;, &#10;    &quot;Comoros&quot;, &quot;Congo&quot;, &quot;Congo, the Democratic Republic of the&quot;, &quot;Djibouti&quot;, &quot;Egypt&quot;, &#10;    &quot;Equatorial Guinea&quot;, &quot;Eritrea&quot;, &quot;Eswatini&quot;, &quot;Ethiopia&quot;, &#10;    &quot;Gabon&quot;, &quot;Gambia&quot;, &quot;Ghana&quot;, &quot;Guinea&quot;, &quot;Guinea-Bissau&quot;, &quot;Cote d&apos;Ivoire&quot;, &#10;    &quot;Kenya&quot;, &quot;Lesotho&quot;, &quot;Liberia&quot;, &quot;Libyan Arab Jamahiriya&quot;, &quot;Madagascar&quot;, &quot;Malawi&quot;, &#10;    &quot;Mali&quot;, &quot;Mauritania&quot;, &quot;Mauritius&quot;, &quot;Morocco&quot;, &quot;Mozambique&quot;, &quot;Namibia&quot;, &#10;    &quot;Niger&quot;, &quot;Nigeria&quot;, &quot;Rwanda&quot;, &quot;Sao Tome and Principe&quot;, &quot;Senegal&quot;, &#10;    &quot;Seychelles&quot;, &quot;Sierra Leone&quot;, &quot;Somalia&quot;, &quot;South Africa&quot;, &quot;South Sudan&quot;, &#10;    &quot;Sudan&quot;, &quot;Tanzania, United Republic of&quot;, &quot;Togo&quot;, &quot;Tunisia&quot;, &quot;Uganda&quot;, &quot;Zambia&quot;, &quot;Zimbabwe&quot;&#10;) THEN &quot;Africa&quot;&#10;ELSE &quot;Other&quot;&#10;END' />
            </column>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Occupied Palestinian Territory&quot;' value='35.233199999999997' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Occupied Palestinian Territory&quot;' value='31.952200000000001' />
              </semantic-values>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Korea, Democratic People&apos;s Republic of&quot;' value='&quot;South Korea&quot;' />
                <semantic-value key='&quot;Korea, Republic of&quot;' value='&quot;North Korea&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[Death Rate Per 100,000]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sex]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Age Group]' derivation='None' name='[none:Age Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1918111247729491969]' derivation='None' name='[none:Calculation_1918111247729491969:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Death Rate Per 100,000]' derivation='Sum' name='[sum:Death Rate Per 100,000:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Deaths]' derivation='Sum' name='[sum:Number of Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Age Group:nk]' filter-group='5'>
            <groupfilter function='member' level='[none:Age Group:nk]' member='&quot;0-6 days&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Calculation_1918111247729491969:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Calculation_1918111247729491969:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Sex:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:Sex:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Year:qk]' filter-group='7' included-values='all' />
          <slices>
            <column>[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Sex:nk]</column>
            <column>[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Year:qk]</column>
            <column>[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Calculation_1918111247729491969:nk]</column>
            <column>[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Age Group:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Country Name:nk]' />
              <lod column='[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Country Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[sum:Number of Deaths:qk]</rows>
        <cols>[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[sum:Death Rate Per 100,000:qk]</cols>
      </table>
      <simple-id uuid='{FC7D5129-E78E-4A57-AC7E-E99B3760EA72}' />
    </worksheet>
    <worksheet name='line_chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Mortality Trends Over Time</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='IHME_GBD_2010_MORTALITY_AGE_SPECIFIC_BY_COUNTRY_1970_2010' name='federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp' />
          </datasources>
          <datasource-dependencies datasource='federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp'>
            <column datatype='string' name='[Age Group]' role='dimension' type='nominal' />
            <column caption='Continent' datatype='string' name='[Calculation_1918111247729491969]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF [Country Name] IN (&#10;    &quot;United States&quot;, &quot;Canada&quot;, &quot;Mexico&quot;, &#10;    &quot;Belize&quot;, &quot;Costa Rica&quot;, &quot;El Salvador&quot;, &quot;Guatemala&quot;, &quot;Honduras&quot;, &#10;    &quot;Nicaragua&quot;, &quot;Panama&quot;, &quot;Antigua and Barbuda&quot;, &quot;Bahamas&quot;, &quot;Barbados&quot;, &#10;    &quot;Cuba&quot;, &quot;Dominica&quot;, &quot;Dominican Republic&quot;, &quot;Grenada&quot;, &quot;Haiti&quot;, &#10;    &quot;Jamaica&quot;, &quot;Saint Kitts and Nevis&quot;, &quot;Saint Lucia&quot;, &#10;    &quot;Saint Vincent and the Grenadines&quot;, &quot;Trinidad and Tobago&quot;&#10;) THEN &quot;North America&quot;&#10;ELSEIF [Country Name] IN (&#10;    &quot;Argentina&quot;, &quot;Bolivia&quot;, &quot;Brazil&quot;, &quot;Chile&quot;, &quot;Colombia&quot;, &quot;Ecuador&quot;, &#10;    &quot;Guyana&quot;, &quot;Paraguay&quot;, &quot;Peru&quot;, &quot;Suriname&quot;, &quot;Uruguay&quot;, &quot;Venezuela&quot;&#10;) THEN &quot;South America&quot;&#10;ELSEIF [Country Name] IN (&#10;    &quot;Albania&quot;, &quot;Andorra&quot;, &quot;Armenia&quot;, &quot;Austria&quot;, &quot;Azerbaijan&quot;, &quot;Belarus&quot;, &quot;Belgium&quot;, &#10;    &quot;Bosnia and Herzegovina&quot;, &quot;Bulgaria&quot;, &quot;Croatia&quot;, &quot;Cyprus&quot;, &quot;Czech Republic&quot;, &#10;    &quot;Denmark&quot;, &quot;Estonia&quot;, &quot;Finland&quot;, &quot;France&quot;, &quot;Georgia&quot;, &quot;Germany&quot;, &quot;Greece&quot;, &#10;    &quot;Hungary&quot;, &quot;Iceland&quot;, &quot;Ireland&quot;, &quot;Italy&quot;, &quot;Kosovo&quot;, &quot;Latvia&quot;, &#10;    &quot;Liechtenstein&quot;, &quot;Lithuania&quot;, &quot;Luxembourg&quot;, &quot;Malta&quot;, &quot;Moldova&quot;, &quot;Morroco&quot;, &#10;    &quot;Montenegro&quot;, &quot;Netherlands&quot;, &quot;Macedonia, the Former Yugoslav Republic of&quot;, &quot;Norway&quot;, &quot;Poland&quot;, &#10;    &quot;Portugal&quot;, &quot;Romania&quot;, &quot;Russian Federation&quot;, &quot;San Marino&quot;, &quot;Serbia&quot;, &quot;Slovakia&quot;, &#10;    &quot;Slovenia&quot;, &quot;Spain&quot;, &quot;Sweden&quot;, &quot;Switzerland&quot;, &quot;Turkey&quot;, &quot;Ukraine&quot;, &#10;    &quot;United Kingdom&quot;, &quot;Vatican City&quot;&#10;) THEN &quot;Europe&quot;&#10;ELSEIF [Country Name] IN (&#10;    &quot;Afghanistan&quot;, &quot;Armenia&quot;, &quot;Azerbaijan&quot;, &quot;Bahrain&quot;, &quot;Bangladesh&quot;, &quot;Bhutan&quot;, &#10;    &quot;Brunei Darussalam&quot;, &quot;Cambodia&quot;, &quot;China&quot;, &quot;Cyprus&quot;, &quot;Georgia&quot;, &quot;India&quot;, &quot;Indonesia&quot;, &#10;    &quot;Iran, Islamic Republic of&quot;, &quot;Iraq&quot;, &quot;Israel&quot;, &quot;Japan&quot;, &quot;Jordan&quot;, &quot;Kazakhstan&quot;, &quot;Kuwait&quot;, &#10;    &quot;Kyrgyzstan&quot;, &quot;Lao People&apos;s Democratic Republic&quot;, &quot;Lebanon&quot;, &quot;Malaysia&quot;, &quot;Maldives&quot;, &quot;Mongolia&quot;, &#10;    &quot;Myanmar&quot;, &quot;Nepal&quot;, &quot;North Korea&quot;, &quot;Oman&quot;, &quot;Pakistan&quot;, &quot;Occupied Palestinian Territory&quot;, &#10;    &quot;Philippines&quot;, &quot;Qatar&quot;, &quot;Saudi Arabia&quot;, &quot;Singapore&quot;, &quot;Korea, Democratic People&apos;s Republic of&quot;, &#10;    &quot;Korea, Republic of&quot;,&quot;Sri Lanka&quot;, &quot;Syrian Arab Republic&quot;, &quot;Tajikistan&quot;, &quot;Thailand&quot;, &quot;Timor-Leste&quot;, &quot;Turkey&quot;, &#10;    &quot;Turkmenistan&quot;, &quot;United Arab Emirates&quot;, &quot;Uzbekistan&quot;, &quot;Viet Nam&quot;, &quot;Yemen&quot;&#10;) THEN &quot;Asia&quot;&#10;ELSEIF [Country Name] IN (&#10;    &quot;Australia&quot;, &quot;New Zealand&quot;, &#10;    &quot;Fiji&quot;, &quot;Papua New Guinea&quot;, &quot;Solomon Islands&quot;, &quot;Vanuatu&quot;, &#10;    &quot;Kiribati&quot;, &quot;Marshall Islands&quot;, &quot;Micronesia, Federated States of&quot;, &quot;Nauru&quot;, &quot;Palau&quot;, &#10;    &quot;Samoa&quot;, &quot;Tonga&quot;, &quot;Tuvalu&quot;, &quot;Cook Islands&quot;, &quot;Niue&quot;&#10;) THEN &quot;Australia and Oceania&quot;&#10;ELSEIF [Country Name] IN (&#10;    &quot;Algeria&quot;, &quot;Angola&quot;, &quot;Benin&quot;, &quot;Botswana&quot;, &quot;Burkina Faso&quot;, &quot;Burundi&quot;, &#10;    &quot;Cape Verde&quot;, &quot;Cameroon&quot;, &quot;Central African Republic&quot;, &quot;Chad&quot;, &#10;    &quot;Comoros&quot;, &quot;Congo&quot;, &quot;Congo, the Democratic Republic of the&quot;, &quot;Djibouti&quot;, &quot;Egypt&quot;, &#10;    &quot;Equatorial Guinea&quot;, &quot;Eritrea&quot;, &quot;Eswatini&quot;, &quot;Ethiopia&quot;, &#10;    &quot;Gabon&quot;, &quot;Gambia&quot;, &quot;Ghana&quot;, &quot;Guinea&quot;, &quot;Guinea-Bissau&quot;, &quot;Cote d&apos;Ivoire&quot;, &#10;    &quot;Kenya&quot;, &quot;Lesotho&quot;, &quot;Liberia&quot;, &quot;Libyan Arab Jamahiriya&quot;, &quot;Madagascar&quot;, &quot;Malawi&quot;, &#10;    &quot;Mali&quot;, &quot;Mauritania&quot;, &quot;Mauritius&quot;, &quot;Morocco&quot;, &quot;Mozambique&quot;, &quot;Namibia&quot;, &#10;    &quot;Niger&quot;, &quot;Nigeria&quot;, &quot;Rwanda&quot;, &quot;Sao Tome and Principe&quot;, &quot;Senegal&quot;, &#10;    &quot;Seychelles&quot;, &quot;Sierra Leone&quot;, &quot;Somalia&quot;, &quot;South Africa&quot;, &quot;South Sudan&quot;, &#10;    &quot;Sudan&quot;, &quot;Tanzania, United Republic of&quot;, &quot;Togo&quot;, &quot;Tunisia&quot;, &quot;Uganda&quot;, &quot;Zambia&quot;, &quot;Zimbabwe&quot;&#10;) THEN &quot;Africa&quot;&#10;ELSE &quot;Other&quot;&#10;END' />
            </column>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Occupied Palestinian Territory&quot;' value='35.233199999999997' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Occupied Palestinian Territory&quot;' value='31.952200000000001' />
              </semantic-values>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Korea, Democratic People&apos;s Republic of&quot;' value='&quot;South Korea&quot;' />
                <semantic-value key='&quot;Korea, Republic of&quot;' value='&quot;North Korea&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Number of Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sex]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Age Group]' derivation='None' name='[none:Age Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1918111247729491969]' derivation='None' name='[none:Calculation_1918111247729491969:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Deaths]' derivation='Sum' name='[sum:Number of Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Age Group:nk]' filter-group='5'>
            <groupfilter function='member' level='[none:Age Group:nk]' member='&quot;0-6 days&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Calculation_1918111247729491969:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:Calculation_1918111247729491969:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Sex:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[none:Sex:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Year:qk]' filter-group='7' included-values='all' />
          <slices>
            <column>[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Sex:nk]</column>
            <column>[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Year:qk]</column>
            <column>[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Calculation_1918111247729491969:nk]</column>
            <column>[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Age Group:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[sum:Number of Deaths:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[sum:Number of Deaths:qk]' scope='rows' value='Number of Deaths (Counts)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[sum:Number of Deaths:qk]</rows>
        <cols>[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Year:qk]</cols>
        <annotations>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Year: </run>
              <run bold='true'><![CDATA[<[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Year:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Total Number of Deaths: </run>
              <run bold='true'><![CDATA[<[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[sum:Number of Deaths:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Year:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[sum:Number of Deaths:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Year:qk]</field>
                      <field>[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[sum:Number of Deaths:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>1970</value>
                    <value>172866152</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='127' y='-133' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Year: </run>
              <run bold='true'><![CDATA[<[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Year:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Total Number of Deaths: </run>
              <run bold='true'><![CDATA[<[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[sum:Number of Deaths:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Year:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[sum:Number of Deaths:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Year:qk]</field>
                      <field>[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[sum:Number of Deaths:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>2010</value>
                    <value>210567809</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='-59' y='143' />
          </annotation>
          <annotation class='point' id='3' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Year: </run>
              <run bold='true'><![CDATA[<[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Year:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Total Number of Deaths: </run>
              <run bold='true'><![CDATA[<[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[sum:Number of Deaths:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Year:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[sum:Number of Deaths:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Year:qk]</field>
                      <field>[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[sum:Number of Deaths:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>1990</value>
                    <value>185702142</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='99' y='60' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{8066C07D-D990-47FF-8B98-62B294A2325D}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Time-Series-Dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='IHME_GBD_2010_MORTALITY_AGE_SPECIFIC_BY_COUNTRY_1970_2010' name='federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp' />
      </datasources>
      <datasource-dependencies datasource='federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp'>
        <column datatype='string' name='[Age Group]' role='dimension' type='nominal' />
        <column caption='Continent' datatype='string' name='[Calculation_1918111247729491969]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
          <calculation class='tableau' formula='IF [Country Name] IN (&#10;    &quot;United States&quot;, &quot;Canada&quot;, &quot;Mexico&quot;, &#10;    &quot;Belize&quot;, &quot;Costa Rica&quot;, &quot;El Salvador&quot;, &quot;Guatemala&quot;, &quot;Honduras&quot;, &#10;    &quot;Nicaragua&quot;, &quot;Panama&quot;, &quot;Antigua and Barbuda&quot;, &quot;Bahamas&quot;, &quot;Barbados&quot;, &#10;    &quot;Cuba&quot;, &quot;Dominica&quot;, &quot;Dominican Republic&quot;, &quot;Grenada&quot;, &quot;Haiti&quot;, &#10;    &quot;Jamaica&quot;, &quot;Saint Kitts and Nevis&quot;, &quot;Saint Lucia&quot;, &#10;    &quot;Saint Vincent and the Grenadines&quot;, &quot;Trinidad and Tobago&quot;&#10;) THEN &quot;North America&quot;&#10;ELSEIF [Country Name] IN (&#10;    &quot;Argentina&quot;, &quot;Bolivia&quot;, &quot;Brazil&quot;, &quot;Chile&quot;, &quot;Colombia&quot;, &quot;Ecuador&quot;, &#10;    &quot;Guyana&quot;, &quot;Paraguay&quot;, &quot;Peru&quot;, &quot;Suriname&quot;, &quot;Uruguay&quot;, &quot;Venezuela&quot;&#10;) THEN &quot;South America&quot;&#10;ELSEIF [Country Name] IN (&#10;    &quot;Albania&quot;, &quot;Andorra&quot;, &quot;Armenia&quot;, &quot;Austria&quot;, &quot;Azerbaijan&quot;, &quot;Belarus&quot;, &quot;Belgium&quot;, &#10;    &quot;Bosnia and Herzegovina&quot;, &quot;Bulgaria&quot;, &quot;Croatia&quot;, &quot;Cyprus&quot;, &quot;Czech Republic&quot;, &#10;    &quot;Denmark&quot;, &quot;Estonia&quot;, &quot;Finland&quot;, &quot;France&quot;, &quot;Georgia&quot;, &quot;Germany&quot;, &quot;Greece&quot;, &#10;    &quot;Hungary&quot;, &quot;Iceland&quot;, &quot;Ireland&quot;, &quot;Italy&quot;, &quot;Kosovo&quot;, &quot;Latvia&quot;, &#10;    &quot;Liechtenstein&quot;, &quot;Lithuania&quot;, &quot;Luxembourg&quot;, &quot;Malta&quot;, &quot;Moldova&quot;, &quot;Morroco&quot;, &#10;    &quot;Montenegro&quot;, &quot;Netherlands&quot;, &quot;Macedonia, the Former Yugoslav Republic of&quot;, &quot;Norway&quot;, &quot;Poland&quot;, &#10;    &quot;Portugal&quot;, &quot;Romania&quot;, &quot;Russian Federation&quot;, &quot;San Marino&quot;, &quot;Serbia&quot;, &quot;Slovakia&quot;, &#10;    &quot;Slovenia&quot;, &quot;Spain&quot;, &quot;Sweden&quot;, &quot;Switzerland&quot;, &quot;Turkey&quot;, &quot;Ukraine&quot;, &#10;    &quot;United Kingdom&quot;, &quot;Vatican City&quot;&#10;) THEN &quot;Europe&quot;&#10;ELSEIF [Country Name] IN (&#10;    &quot;Afghanistan&quot;, &quot;Armenia&quot;, &quot;Azerbaijan&quot;, &quot;Bahrain&quot;, &quot;Bangladesh&quot;, &quot;Bhutan&quot;, &#10;    &quot;Brunei Darussalam&quot;, &quot;Cambodia&quot;, &quot;China&quot;, &quot;Cyprus&quot;, &quot;Georgia&quot;, &quot;India&quot;, &quot;Indonesia&quot;, &#10;    &quot;Iran, Islamic Republic of&quot;, &quot;Iraq&quot;, &quot;Israel&quot;, &quot;Japan&quot;, &quot;Jordan&quot;, &quot;Kazakhstan&quot;, &quot;Kuwait&quot;, &#10;    &quot;Kyrgyzstan&quot;, &quot;Lao People&apos;s Democratic Republic&quot;, &quot;Lebanon&quot;, &quot;Malaysia&quot;, &quot;Maldives&quot;, &quot;Mongolia&quot;, &#10;    &quot;Myanmar&quot;, &quot;Nepal&quot;, &quot;North Korea&quot;, &quot;Oman&quot;, &quot;Pakistan&quot;, &quot;Occupied Palestinian Territory&quot;, &#10;    &quot;Philippines&quot;, &quot;Qatar&quot;, &quot;Saudi Arabia&quot;, &quot;Singapore&quot;, &quot;Korea, Democratic People&apos;s Republic of&quot;, &#10;    &quot;Korea, Republic of&quot;,&quot;Sri Lanka&quot;, &quot;Syrian Arab Republic&quot;, &quot;Tajikistan&quot;, &quot;Thailand&quot;, &quot;Timor-Leste&quot;, &quot;Turkey&quot;, &#10;    &quot;Turkmenistan&quot;, &quot;United Arab Emirates&quot;, &quot;Uzbekistan&quot;, &quot;Viet Nam&quot;, &quot;Yemen&quot;&#10;) THEN &quot;Asia&quot;&#10;ELSEIF [Country Name] IN (&#10;    &quot;Australia&quot;, &quot;New Zealand&quot;, &#10;    &quot;Fiji&quot;, &quot;Papua New Guinea&quot;, &quot;Solomon Islands&quot;, &quot;Vanuatu&quot;, &#10;    &quot;Kiribati&quot;, &quot;Marshall Islands&quot;, &quot;Micronesia, Federated States of&quot;, &quot;Nauru&quot;, &quot;Palau&quot;, &#10;    &quot;Samoa&quot;, &quot;Tonga&quot;, &quot;Tuvalu&quot;, &quot;Cook Islands&quot;, &quot;Niue&quot;&#10;) THEN &quot;Australia and Oceania&quot;&#10;ELSEIF [Country Name] IN (&#10;    &quot;Algeria&quot;, &quot;Angola&quot;, &quot;Benin&quot;, &quot;Botswana&quot;, &quot;Burkina Faso&quot;, &quot;Burundi&quot;, &#10;    &quot;Cape Verde&quot;, &quot;Cameroon&quot;, &quot;Central African Republic&quot;, &quot;Chad&quot;, &#10;    &quot;Comoros&quot;, &quot;Congo&quot;, &quot;Congo, the Democratic Republic of the&quot;, &quot;Djibouti&quot;, &quot;Egypt&quot;, &#10;    &quot;Equatorial Guinea&quot;, &quot;Eritrea&quot;, &quot;Eswatini&quot;, &quot;Ethiopia&quot;, &#10;    &quot;Gabon&quot;, &quot;Gambia&quot;, &quot;Ghana&quot;, &quot;Guinea&quot;, &quot;Guinea-Bissau&quot;, &quot;Cote d&apos;Ivoire&quot;, &#10;    &quot;Kenya&quot;, &quot;Lesotho&quot;, &quot;Liberia&quot;, &quot;Libyan Arab Jamahiriya&quot;, &quot;Madagascar&quot;, &quot;Malawi&quot;, &#10;    &quot;Mali&quot;, &quot;Mauritania&quot;, &quot;Mauritius&quot;, &quot;Morocco&quot;, &quot;Mozambique&quot;, &quot;Namibia&quot;, &#10;    &quot;Niger&quot;, &quot;Nigeria&quot;, &quot;Rwanda&quot;, &quot;Sao Tome and Principe&quot;, &quot;Senegal&quot;, &#10;    &quot;Seychelles&quot;, &quot;Sierra Leone&quot;, &quot;Somalia&quot;, &quot;South Africa&quot;, &quot;South Sudan&quot;, &#10;    &quot;Sudan&quot;, &quot;Tanzania, United Republic of&quot;, &quot;Togo&quot;, &quot;Tunisia&quot;, &quot;Uganda&quot;, &quot;Zambia&quot;, &quot;Zimbabwe&quot;&#10;) THEN &quot;Africa&quot;&#10;ELSE &quot;Other&quot;&#10;END' />
        </column>
        <column datatype='string' name='[Sex]' role='dimension' type='nominal' />
        <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
        <column-instance column='[Age Group]' derivation='None' name='[none:Age Group:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_1918111247729491969]' derivation='None' name='[none:Calculation_1918111247729491969:nk]' pivot='key' type='nominal' />
        <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
        <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type-v2='layout-basic' w='82400' x='800' y='1000'>
              <zone h='35500' id='1' name='line_chart' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='30125' id='10' name='BarChart-Countries' w='82400' x='800' y='36500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='32375' id='11' name='KPIs-Total_Deaths' w='44700' x='800' y='66625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='32375' id='13' name='Scatter plots' w='37700' x='45500' y='66625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='4' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='8625' id='8' name='line_chart' param='[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Year:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6500' id='7' mode='dropdown' name='line_chart' param='[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Calculation_1918111247729491969:nk]' type-v2='filter' w='16000' x='83200' y='9625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6500' id='9' mode='dropdown' name='line_chart' param='[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Sex:nk]' type-v2='filter' w='16000' x='83200' y='16125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6500' id='6' mode='dropdown' name='line_chart' param='[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Age Group:nk]' type-v2='filter' w='16000' x='83200' y='22625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9000' id='12' name='Reset' w='16000' x='83200' y='29125'>
                <layout-cache fixed-size-h='64' fixed-size-w='142' type-h='fixed' type-w='fixed' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='60875' id='14' name='Scatter plots' pane-specification-id='0' param='[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Country Name:nk]' type-v2='color' w='16000' x='83200' y='38125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1450' minheight='1450' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='32' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='31' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone h='8625' id='8' name='line_chart' param='[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Year:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='7' mode='dropdown' name='line_chart' param='[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Calculation_1918111247729491969:nk]' type-v2='filter' w='16000' x='83200' y='9625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='9' mode='dropdown' name='line_chart' param='[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Sex:nk]' type-v2='filter' w='16000' x='83200' y='16125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='6' mode='dropdown' name='line_chart' param='[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Age Group:nk]' type-v2='filter' w='16000' x='83200' y='22625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='276' h='35500' id='1' is-fixed='true' name='line_chart' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='64' h='9000' id='12' is-fixed='true' name='Reset' w='16000' x='83200' y='29125'>
                  <layout-cache fixed-size-h='64' fixed-size-w='142' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='233' h='30125' id='10' is-fixed='true' name='BarChart-Countries' w='82400' x='800' y='36500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='251' h='32375' id='11' is-fixed='true' name='KPIs-Total_Deaths' w='44700' x='800' y='66625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='251' h='32375' id='13' is-fixed='true' name='Scatter plots' w='37700' x='45500' y='66625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='60875' id='14' name='Scatter plots' pane-specification-id='0' param='[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Country Name:nk]' type-v2='color' w='16000' x='83200' y='38125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{1CF95B43-16B6-4FDF-9F35-C48E03022CC0}' />
    </dashboard>
  </dashboards>
  <windows source-height='48'>
    <window class='worksheet' maximized='true' name='line_chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='dropdown' param='[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Age Group:nk]' type='filter' />
            <card mode='dropdown' param='[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Calculation_1918111247729491969:nk]' type='filter' />
            <card mode='dropdown' param='[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Sex:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D3DEED6F-DA5B-4900-9305-461C4F6E0876}' />
    </window>
    <window class='worksheet' name='Scatter plots'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Country Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E13AE8D0-0444-436D-92F5-0BBA3C373D65}' />
    </window>
    <window class='worksheet' name='BarChart-Countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Age Group:nk]' type='filter' />
            <card mode='dropdown' param='[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Calculation_1918111247729491969:nk]' type='filter' />
            <card param='[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='dropdown' param='[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Sex:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Country Name:nk]</field>
            <field>[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0DAA3CF2-E1BE-46F3-B159-E8108260A64B}' />
    </window>
    <window class='worksheet' name='KPIs-Total_Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Sex:nk]' type='filter' />
            <card mode='dropdown' param='[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Age Group:nk]' type='filter' />
            <card mode='dropdown' param='[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Calculation_1918111247729491969:nk]' type='filter' />
            <card param='[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[:Measure Names]</field>
            <field>[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Age Group:nk]</field>
            <field>[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Calculation_1918111247729491969:nk]</field>
            <field>[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Number of Deaths (bin):qk]</field>
            <field>[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Sex:nk]</field>
            <field>[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{FE5F48C4-4CA2-4496-8CF1-2B64D46C344D}' />
    </window>
    <window class='worksheet' name='Reset'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{A40288BD-6B14-4A35-A9B8-F1E7C77F6682}' />
    </window>
    <window class='dashboard' name='Time-Series-Dashboard'>
      <viewpoints>
        <viewpoint name='BarChart-Countries'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='KPIs-Total_Deaths'>
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='Reset' />
        <viewpoint name='Scatter plots'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1i3kn7f1gg5h4b17a5kpr1aq8zsp].[none:Country Name:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='line_chart'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{FB4BD63E-F20B-43A8-B889-97222A3A6170}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='BarChart-Countries' width='384'>
      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
    </thumbnail>
    <thumbnail height='288' name='KPIs-Total_Deaths' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAEgCAYAAAC926RRAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3deXyN16L/8c+WCBGJkIFqQlTN41VTaa9WnWMoLWq4VQ7V49R4rtJTjdb0
      KlrKverU0YNjbJ1Ga64aSw3XNZ+gikh3CSKjDEIj4++P/PZzsu2dCOmxd+7zfb9eXp48a61n
      PTt/rO9e6xliyc/Pz0dEREynnKtPQEREXEMBICJiUgoAERGTUgCIiJiUAkBExKQUACIiJqUA
      EBExKQWAiIhJKQBERExKASAiYlIKABERk1IAiIiYlAJARMSkFAAiIialABARMSkFgIiISSkA
      RERMSgEgImJSCgAREZNSAIiImJQCQETEpBQAIiImpQAQETEpBYCIiEkpAERETEoBICJiUgoA
      ERGTUgCIiJiUAkBExKQUACIiJqUAEBExKQWAiIhJKQBERExKASAiYlIKABERk1IAiIiYlAJA
      RMSkFAAiIialABARMSkFgIiISSkARERMSgEgImJSCgAREZNSAIiImJQCQETEpBQAIiImpQAQ
      ETEpBYCIiEkpAERETEoBICJiUgoAERGTUgCIiJiUAkBExKQUACIiJqUAEBExKQWAiIhJKQBE
      RExKASAiYlIKABERk1IAiIiYlAJARMSkFAAiIialABARMSkFgIiISSkARERMSgEgImJSCgAR
      EZNSAIiImJSnq09AREQeTlZWFufPnwfg8ccfJzAw8IHaW/Lz8/P/FScmIuKOjh8/TkZGBgAW
      i4VOnTphsVic1j1w4AC5ubmEhIRQr169R3maJXLjxg169eoFwMSJE3n11VcfqL1mACJiKv/9
      3/9NVFSU8fOcOXN44YUXnNYNDw/n7t27DBw4kD/96U+P6hQfGV0DEBFTW7p0KWZdCFEAiIgp
      lStXMPxFR0ezb98+F5+NaygARMSUWrZsSXBwMODaWUBSUhJWq5U7d+44lGVmZnL58mXi4uJK
      fH65ublcvXqVGzdu3LeurgGIiCl5eXkxdOhQPv74Yy5dusS+ffvo3LlzidpOnTqVH374gbCw
      MP7rv/7LoTw8PJyLFy9Sr1495syZY+xPSEhg5MiRAAwZMoQ1a9YQExNjlHfv3p333nuPK1eu
      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
      rzNo0CCSkpIoX748FouFlJQUDh48yIwZM4wLwq+++irt2rUz+vP392f37t1kZGQQGxuL1Wql
      Vq1a+Pr6kpKSwjfffMPChQuNgfyNN94wbuWsUKECcXFxREVFkZGRwenTp6lRowZ3797lq6++
      Yu3atUDBi+nef/99zQBEpMxwyeug9+7dy4PkzrBhwxg+fDhXr1413vdTlOeff57w8HCHpZ6o
      qChGjx5d5AzCpm/fvowfP95uX3JyMhMmTODnn3922sbT05PJkyfTpUuXEnwaERH34JIloAd9
      b77tlkx/f3/at2/v9H393t7e/OEPf2DGjBlO1/nr16/P8uXL6dixo9M+goKCeO+99/jP//xP
      h7KAgAAWLVrEU0895VBWpUoV5syZo8FfRMocl/9BmIeRmpqK1WolPj4ei8VCw4YNqVWrVomD
      JSUlhStXrhh/EaxWrVrUrFnTabDcKz09nbNnz3L79m3q169P7dq1jdtNRUTKkjIZACIiUnpl
      7i4gERH5dSgARERMSgEgImJSCgAREZNSAIiImJQCQETEpBQAIiImpQAQETGpUj8IJiIiZZNm
      ACIiJqUAEBExKQWAiIhJKQBERExKASAiYlIKABERk1IAiIiYlAJARMSkFAAiIialABARMSkF
      gIiISXm6+gRs8vLy2LVrF5cvX6Z///4EBAQUW//gwYOcPXuW6OhovL29adGiBe3bt6dWrVrF
      tktISGDv3r1cunSJhIQE6tWrR4sWLejYsSOensX/OuLj4zly5AiRkZGkpqbSrFkzWrZsSatW
      rR7484qIuJrLXwaXn5/Pvn37+Oyzz7BarQAsXryYNm3aOK1/48YNZs6cydGjRx3KvLy8mDJl
      Ct27d3fadsOGDXzyySfcvn3boaxVq1bMmzcPPz8/p21PnTrFxIkTuXXrlkPZwIEDmThxIuXK
      aUIlImWHS0esw4cPM2TIEN555x1j8C9OTk4OEyZMMAZ/Hx8fmjdvTrVq1QDIyspiypQpbNy4
      0aHtrl27mD17tjH4165dm4YNG+Lh4QEUDPDDhg0jMzPToe2pU6cYO3asMfj7+vrazTQiIiKY
      NWvWA356ERHXclkATJs2jT/+8Y9cuHChxG1Wr17NpUuXAOjcuTPbtm1j+fLl7Nq1i3fffdf4
      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
      T58xYIAR6mUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='48' name='Reset' width='288'>
      iVBORw0KGgoAAAANSUhEUgAAASAAAAAwCAYAAACxIqevAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAOSElEQVR4nO3de1CU1f/A8fcu7oqIoFy0EEoKacO8lFpaJiOYmZFpdnVy8oJpjOlkTTlk
      GuZlIlFEbQwdbRQVzXRychpEERHQEEnxEpcEXWlBUhBdWFh2l98fzD4/Vm6LKA99O6+/dp/L
      ec4edj97zuecZ1HU1dXVIQiCIAOl3BUQBOG/SwQgQRBkIwKQIAiyEQFIEATZiAAkCIJsRAAS
      BEE2IgAJgiAbEYAEQZCNCECCIMhGBCBBEGQjApAgCLIRAUgQBNmIACQIgmxEABIEQTYiAAmC
      IJsu7S0gMzPzftRDEIT/oHYHIEGQ07Bhw+SugtAOCvGLiIIgyEXkgARBkI0IQIIgyEYEIEEQ
      ZCMCkCAIshEBSBAE2YgAJAiCbEQAEgRBNmIh4v+46upqcnNzAfDz86N79+4y10iQS1ZWFmlp
      aQAEBQUxYMCAFo+fPHkyKpWKvXv3PrA6yRaATp8+jV6vb7Tdzc0NLy8vPDw8UCgUMtRMXs21
      S0MKhYLRo0ejVNZ3YI8ePcqBAwcAGD9+PCEhIdKx2dnZhIWFAfDdd98xZsyYB1RzobPbtm0b
      J0+eBKC4uJiVK1fKXCMZA9DatWvJy8trdr+bmxvTp09nypQpdO3atQNr1n779u3DYDCg0WgY
      Pnx4m85trV2sDh8+jJubGwA6nY5Tp04B8NRTT3VYXYV/j4qKCjIyMnjmmWe4ceMGqamp1NTU
      yP7Z6rQ5oLKyMtasWcPHH3+MxWKRuzptsnnzZtatWyf1Sh40BwcHVCoVKpUKJyenNp3b0XUV
      5JGcnIzZbGbcuHGMHTuWqqoqaTgmJ9lzQB4eHmzevBkAg8FAVlYWGRkZnD59Wnr+448/MnPm
      TJlr2rH69OnDpk2bmt3fs2dP6fHUqVOZOnVqR1RL+JdKTExEqVQSFBTEP//8w9atW0lMTCQo
      KEjWeskegNRqNT4+PtJzf39/3n33Xc6ePcvcuXMxmUwcP3682QBUV1eHVqvl5s2b+Pv74+zs
      bNd1q6qqqK6upmfPnlIupSWVlZXk5ubSq1cv+vXr98DzUw4ODjbt0pl0dFsI7XPr1i1Onz7N
      kCFDcHNzw83NDW9vb1JTU6mursbR0bHF80tKSpgzZw5lZWX4+PgwYMAAZs+eTe/evZs95+TJ
      k6SkpJCTk4PRaKRv374EBgby0ksvoVarpeNkD0DNGTJkCAEBAWRnZ3P58mUsFotNoDCZTMTE
      xHDw4EEpaatQKPDz8yMiIgJ/f/9GZZaUlLBlyxaSk5O5desWAEqlEm9vb4KDg5k8eTJeXl42
      51y8eJEVK1aQn5+P9YcDnJ2dmTRpEvPnz5fqdPPmTWbPng1AeXk5AEeOHCEnJ8emvO3bt9sd
      JO116dIlFi9eDMCXX37J0KFDWzz+Xutqb1sAlJaWMnfuXABmzpxJSEgIOp2OtWvXkpWVhaOj
      I4cOHWrnKxfscezYMcxmM2PHjpW2BQUFsX37dtLS0ggODm723KtXr/LGG2+g0Wjo27cvubm5
      5OXlkZycTFRUFIMGDbI5vqamhtWrV0tD+t69e+Po6EhycjJJSUnk5eXxySefSMd32gAESFPG
      JpMJs9ksvcENBgNhYWGcP39eOlapVGKxWMjPz2fWrFmsWbPGJqlaXl5OaGgoJSUlNtewWCxo
      tVq2bdtGt27dbHpaCQkJfP3119TW1tpcQ6/XExcXR2FhIdHR0SgUCsxmM1qttsmy7952v+n1
      euk6t2/fbvX4e6lrW9ri7mvcuXOHkpISpk+fTllZGVDfwxM6xpEjR1AoFDbDrbFjx7J9+3YS
      ExNbDEBms5mXX36ZZcuWAf//xb9r1y6WL19OfHy8zRdPbGwsBw4cwM/Pj2+++Yb+/fsD9e+B
      PXv20KNHD5vyO20Aun37NpcuXQLqh2UqlUrat3v3bin4vPrqq8ybNw9XV1dOnDjB0qVLMRgM
      REdHs3PnTumcn3/+WQo+wcHBTJgwAS8vL4qKisjKyuLgwYM216+srCQyMpLa2lp69uzJsmXL
      GD58OGVlZaxatYrU1FTS0tJISUkhMDCQHj168MUXXwCwevVqzGYzTz75JBMnTpTKVCgU9733
      cy/aWte2tsXdqqurWbhwoRR8HB0d8fb27oBXKty6dYvMzEwGDx6Mh4eHtD0gIAAvL69Wh2G+
      vr5S8AHo0qULCxcu5MqVK6Snp3PkyBHGjRsHgFarZdeuXXh6erJ161abCZEePXoQGhraqPxO
      GYC0Wi3Lly+noqICsP3Vu6qqKnbs2AHA448/TkREhLQvODgYrVbLxo0byc3NJSMjg2effRaA
      /Px8oL5XFRERITV4//79GTNmDB999JH0AQGIj4+Xrh8eHs7zzz8P1CeHIyMjpZmEHTt2EBgY
      SLdu3XjrrbcA2LJlCzdv3sTHx0fadi9qamqa3O7g4ECXLvf+p2trXdvaFnfbvHkzRqMRZ2dn
      FixYQEhIiM0XivDgJCUlYTabm+zlBAUFERcXR2pqqs3wrKHm8nuzZs0iPT2dCxcuSAHo+PHj
      1NbWMnfuXLtnY2UPQOXl5YSHhwP1H7ji4mL++usvqfuv0Wj48MMPpeMLCgq4c+cOAKNHj25U
      3siRI9m4cSMA58+flwKQq6srUD98++2333j99ddtuo5OTk42jXbu3DkAVCoVI0aMsLmGWq1m
      2LBhpKSkcOHChUb5qftBp9PxwgsvNLnPz8+P+Pj4+3q9lrS3LYxGIx4eHqxfv17qkgsdwzr8
      aioABQcHExcXR2JiYrMBqDl+fn4AFBUVSdsKCgoA2rSeTPYAZDAYOHz4cJP7Ro8ezaJFi2y6
      h9euXZMeOzs788cff9icU1dXh1qtxmg0UlxcLG0PDg5m//79WCwWVqxYwYYNGxg2bBgjR47k
      xRdfxN3d3aYc63U8PT2lWxkasnZnTSYTN27caHFG4H4zGo0ddi1of1u4uroSGxvLI4888uAr
      K0jKy8vJzMxEpVK1uKQjLS0Ng8FAt27d7C67e/fuqNVqaTIHkHJ+Dz30kN3lyB6AVCoVjz32
      GDU1NVy5ckXaHhkZ2eQahevXr0uP169f32LZpaWl0uPnnnuOxYsXExMTw+3bt6moqODo0aMc
      PXoUpVLJm2++ybx586RekPU6Op1OmjFq6Tr3OwB17dqVBQsWNLmvo/NI7W2LDz74QAQfGRw7
      dgyLxYLRaGyU42yourqaEydOSEMpe5SVlWE0GunTp4+0zboyX6/X4+LiYlc5sgcgT09Pdu7c
      SV1dHREREfz6668AxMTEMGjQIJvEGWDTU/H392/Uc2no7qn4SZMmMX78eDIzM0lPT+fUqVNo
      tVosFgt79+5Fr9dLCTd3d3eKi4txdHTk6aefbvE1tHX1sT3c3d15++2373u596K9bSHyPfJI
      TEwE4Keffmr2C/LixYuEhYXZJJPtYc2p+vr6Stt8fX05duwYhYWFDB482K5yZA9AVgqFgiVL
      lqDX60lOTqaoqIiwsDBiY2NtVv02nD0JCgpqMrPeEkdHR0aNGsWoUaMAyMnJ4auvvqKwsJCE
      hASWLFlCly5d8Pb2pri4GAcHByIjI9vUPbVq7abSzqSlut6PthA6VllZGWfOnCEgIMAmSNxt
      +PDheHp6kpaWRlVVlV1fpnV1dcTGxgIwcOBAaXtAQABQv34sKirKrnp2qnvBlEolK1eulJJY
      BQUFzJs3z+bD0a9fP2kGaP/+/ZhMpibLMhgMFBYWSs/PnDnT5KySRqPhlVdeAerXPFgX5lmT
      pZWVlS0umMvLy2u0tscaMDMzM6msrGz5RcvMnrq2py0EeViHX60ll63rg2pqakhNTW21XOs6
      oHPnzjFixAhGjhwp7QsMDGTgwIEcP368yUmSGzduSEtrrDpVAIL6WZWoqCgpmubk5DB//nwM
      BgMAvXr1koYmpaWlzJgxg8zMTO7cuYNer+f8+fP88MMPhISE2Ix7161bx2uvvUZcXBxXr17F
      YrFQW1tLdnY2e/bsAeqTpZ6engBMmzZN+qaPiopiy5YtXLt2DZPJRFFREUlJSYSFhTF16tRG
      ge3RRx8F6pPFy5YtIz09HZ1OR3p6Op3t37DZU9f2tIUgD+vwy57ZLesMmfWchrRaLZ9//jmH
      Dh3i+++/5/3332fHjh24u7tLa8msFAoFixYtwsXFhdWrVzNnzhy2bdvG7t27iYiIYOLEiVKK
      xarTDMEacnJyYv369cyePZuCggKys7P59NNPiY6ORq1WExoayokTJ7h27Rp//vmntOS/NWVl
      ZURHR0vlgO2MUsMbOj09PQkLC2PNmjXU1tayadOmFmcSGnrnnXdISkoCkBLdVikpKQ8kZ3Sv
      7Klre9pC6Hh6vZ6srCw0Gk2jW4uaMmTIENzd3UlPT8dkMtmsMRs6dCinTp2S3iNqtZoJEybw
      2WefNZlofuKJJ4iPj2f58uX8/vvvnDlzRtqn0WgaLZ2RLQBZX2RzC+pcXV3ZsGEDoaGh6HQ6
      MjIyWLp0KatWrcLFxYXdu3ezceNGfvnlF6qqqmzO9fHxYfLkyTYre8PDw9m3bx8JCQkYDAab
      wOPi4sK0adOYMWOGTTnvvfceGo2Gb7/9lsuXL9v0XlQqFYGBgUyZMqVRTmTo0KGEh4cTExNj
      M3xUKBSt3rjZWrvcb/bWta1t0bD+HfVahHrOzs5kZGTYfbxSqSQhIaHR9p07d+Lk5ITRaOTs
      2bO4u7vTr1+/Vm+j6d27NzExMRiNRvLz8zEajXh7e0uji4b+9f+aua6ujuvXr1NaWoparaZv
      376N7jdpqKamhr///hudTofRaOThhx/G19e31TuCDQYDV65cwWw24+bmRp8+fVr9Q1RXV6PV
      aqmoqMDBwQE/Pz+7pyc7Wlvqei9tIQhN+dcHIEEQ/r06XRJaEIT/jv8DcUGLHTr/w6YAAAAA
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Scatter plots' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Time-Series-Dashboard' width='384'>
      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
      b76ZTExMELfbTfbt20fKy8tJZ2cnee6559h0d911F3E4HBcT5j4AACAASURBVGR4eJjceuut
      ZHx8nP27yWQihBBy++23T8n7pptuInfccQf7PH/66afkq6++IoQQsnfvXtLX10cIIeTFF18k
      p0+fJoWFheTtt98mhBAyPj7OvnNNTU1seQzMe3TfffeR9vZ2otFoyMMPP0wIIeSf//wn+frr
      r9m0d9xxByGEkH379hGlUkkI8Ywr77//PnG73aSoqIi88847bJqmpiZCCCElJSXk8ccfJ2az
      mdx6663EYrEQp9NJfv3rXxO9Xk+OHDlCrr32WvLhhx9OaVeuNp3cjtPhGj+4yuYaP7788kty
      6NAhNh+u8ePPf/4zaWhoIIQQ0tvbS9xuN/uboqIi8te//pUQQohGoyH33nsv0el05De/+Q0h
      hBCHw0EGBgZm1IGBd8ocGhqK/Px8fPLJJ+y9rIDnerK77roLbrcbq1evxi9+8YsZv92wYQPu
      vfdebN++HRdffDH0ej2eeOIJAMB///d/c15bZrVa2dnDpZdeys6sp+N0OrF//34YDAYMDg6e
      0QXlDocDYrEYtbW1kMlk+OyzzwB47oNlrpJ877330N/f7zO2d1ZWFrsSYdpreltQKL5grgic
      fFlNV1cX1q1bx9qbr7zySpSXl/Oah5KTk9lb9UJDQ+F0Or2mI4Rg3759Xq+dHBgYQHV1Naqr
      q0EIQWNjI6688kq8/fbb0Ol02LlzJ3vJC58Z95e//CVeeukl3H///b4bAEBKSgoAzyX2SUlJ
      EAgEkMvlU8wtzDWPmzZtwrvvvsve9nbs2DEAHitFR0cHAOCiiy7CddddN6UMrjbdsGGDXzIC
      340fXGVnZWWd0fixefNmPPvss9i2bRsuvvjiKfcAbNq0CW+99RZuvfVWfPHFF7jssssQHh4O
      gUCAxx57DFu3bvV6jzUDrwIICwvDpZdeiomJCezfvx/33nsvAM+tM/v37+dtlFtvvRVarRal
      paW488478eabb7IKgOsScwBTOtdut3Pe1vTkk0/i3nvvRUpKCgoLC9m7W2dDYWEhfvjDH0Kl
      UiEsLAwJCQkAgPvuuw8CgQB//etfkZubi5///OcYHx/Hc889F1D+3trC1wUolHOb7OxslJWV
      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
      MSL4fxbe3d5zKthJAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='line_chart' width='384'>
      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
      RGquAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
